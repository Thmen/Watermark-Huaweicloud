-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity img_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    img_ce0 : OUT STD_LOGIC;
    img_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    img_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    img_ce1 : OUT STD_LOGIC;
    img_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    mark_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    mark_ce0 : OUT STD_LOGIC;
    mark_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    out_r_ce1 : OUT STD_LOGIC;
    out_r_we1 : OUT STD_LOGIC;
    out_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of img_proc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "img_proc,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flga2104-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.635250,HLS_SYN_LAT=320011,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=1643,HLS_SYN_LUT=7371}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_9C40 : STD_LOGIC_VECTOR (15 downto 0) := "1001110001000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv22_2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_const_lv22_3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000011";
    constant ap_const_lv22_320 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001100100000";
    constant ap_const_lv22_321 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001100100001";
    constant ap_const_lv22_322 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001100100010";
    constant ap_const_lv22_323 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001100100011";
    constant ap_const_lv22_640 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011001000000";
    constant ap_const_lv22_641 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011001000001";
    constant ap_const_lv22_642 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011001000010";
    constant ap_const_lv22_643 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011001000011";
    constant ap_const_lv22_960 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100101100000";
    constant ap_const_lv22_961 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100101100001";
    constant ap_const_lv16_C8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011001000";
    constant ap_const_lv22_962 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100101100010";
    constant ap_const_lv22_963 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100101100011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mark_idx_reg_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_reg_375 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal mark_idx_1_fu_415_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mark_idx_1_reg_776 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal next_urem_fu_421_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_urem_reg_781 : STD_LOGIC_VECTOR (15 downto 0);
    signal base_idx_fu_469_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal base_idx_reg_787 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_fu_479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_805 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_7_reg_805 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_reg_815 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_9_reg_815 : STD_LOGIC_VECTOR (63 downto 0);
    signal indata_0_reg_830 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal indata_1_reg_835 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_840 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_11_reg_840 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_850 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_13_reg_850 : STD_LOGIC_VECTOR (63 downto 0);
    signal mark_load_reg_860 : STD_LOGIC_VECTOR (7 downto 0);
    signal indata_2_reg_865 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal indata_3_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_875 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_15_reg_875 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_885 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_17_reg_885 : STD_LOGIC_VECTOR (63 downto 0);
    signal indata_4_reg_895 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal indata_5_reg_900 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_reg_905 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_19_reg_905 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_reg_915 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_21_reg_915 : STD_LOGIC_VECTOR (63 downto 0);
    signal indata_6_reg_925 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal indata_7_reg_930 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_reg_935 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_23_reg_935 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_reg_945 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_25_reg_945 : STD_LOGIC_VECTOR (63 downto 0);
    signal indata_8_reg_955 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal indata_9_reg_960 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_965 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_27_reg_965 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_reg_975 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_29_reg_975 : STD_LOGIC_VECTOR (63 downto 0);
    signal indata_10_reg_985 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal indata_11_reg_990 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_reg_995 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_31_reg_995 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_reg_1005 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_33_reg_1005 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx_urem_fu_673_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal idx_urem_reg_1015 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal indata_12_reg_1020 : STD_LOGIC_VECTOR (7 downto 0);
    signal indata_13_reg_1025 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_reg_1030 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_35_reg_1030 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_reg_1040 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp0_iter1_tmp_37_reg_1040 : STD_LOGIC_VECTOR (63 downto 0);
    signal outdata_0_reg_1050 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_1_reg_1055 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_2_reg_1060 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_3_reg_1065 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_4_reg_1070 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_5_reg_1075 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_6_reg_1080 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_7_reg_1085 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_8_reg_1090 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_9_reg_1095 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_10_reg_1100 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_11_reg_1105 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_12_reg_1110 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_13_reg_1115 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_14_reg_1120 : STD_LOGIC_VECTOR (7 downto 0);
    signal outdata_15_reg_1125 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_add_watermark_fu_386_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_watermark_fu_386_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_mark_idx_phi_fu_368_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_tmp_49_phi_fu_379_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal mark_idx_cast_fu_427_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_cast_fu_431_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_fu_435_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_39_fu_441_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_50_fu_453_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_457_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_cast_cast_fu_465_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_cast_fu_449_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal base_idx_cast_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_500_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_10_cast_fu_505_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_514_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_12_cast_fu_519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_528_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_14_cast_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_542_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_16_cast_fu_547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_556_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_18_cast_fu_561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_570_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_20_cast_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_584_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_22_cast_fu_589_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_598_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_24_cast_fu_603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_612_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_26_cast_fu_617_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_626_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_28_cast_fu_631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_640_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_30_cast_fu_645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_654_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_32_cast_fu_659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_680_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_34_cast_fu_685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_694_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_36_cast_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component add_watermark IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        indata_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_4_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_5_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_6_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_7_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_8_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_9_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_10_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_11_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_12_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_13_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_14_read : IN STD_LOGIC_VECTOR (7 downto 0);
        indata_15_read : IN STD_LOGIC_VECTOR (7 downto 0);
        mark : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_add_watermark_fu_386 : component add_watermark
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        indata_0_read => indata_0_reg_830,
        indata_1_read => indata_1_reg_835,
        indata_2_read => indata_2_reg_865,
        indata_3_read => indata_3_reg_870,
        indata_4_read => indata_4_reg_895,
        indata_5_read => indata_5_reg_900,
        indata_6_read => indata_6_reg_925,
        indata_7_read => indata_7_reg_930,
        indata_8_read => indata_8_reg_955,
        indata_9_read => indata_9_reg_960,
        indata_10_read => indata_10_reg_985,
        indata_11_read => indata_11_reg_990,
        indata_12_read => indata_12_reg_1020,
        indata_13_read => indata_13_reg_1025,
        indata_14_read => img_q0,
        indata_15_read => img_q1,
        mark => mark_load_reg_860,
        ap_return_0 => grp_add_watermark_fu_386_ap_return_0,
        ap_return_1 => grp_add_watermark_fu_386_ap_return_1,
        ap_return_2 => grp_add_watermark_fu_386_ap_return_2,
        ap_return_3 => grp_add_watermark_fu_386_ap_return_3,
        ap_return_4 => grp_add_watermark_fu_386_ap_return_4,
        ap_return_5 => grp_add_watermark_fu_386_ap_return_5,
        ap_return_6 => grp_add_watermark_fu_386_ap_return_6,
        ap_return_7 => grp_add_watermark_fu_386_ap_return_7,
        ap_return_8 => grp_add_watermark_fu_386_ap_return_8,
        ap_return_9 => grp_add_watermark_fu_386_ap_return_9,
        ap_return_10 => grp_add_watermark_fu_386_ap_return_10,
        ap_return_11 => grp_add_watermark_fu_386_ap_return_11,
        ap_return_12 => grp_add_watermark_fu_386_ap_return_12,
        ap_return_13 => grp_add_watermark_fu_386_ap_return_13,
        ap_return_14 => grp_add_watermark_fu_386_ap_return_14,
        ap_return_15 => grp_add_watermark_fu_386_ap_return_15);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    mark_idx_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                mark_idx_reg_364 <= mark_idx_1_reg_776;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                mark_idx_reg_364 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    tmp_49_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                tmp_49_reg_375 <= idx_urem_reg_1015;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_49_reg_375 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    ap_reg_pp0_iter1_tmp_11_reg_840(31 downto 2) <= tmp_11_reg_840(31 downto 2);
                    ap_reg_pp0_iter1_tmp_13_reg_850(31 downto 2) <= tmp_13_reg_850(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    ap_reg_pp0_iter1_tmp_15_reg_875(31 downto 2) <= tmp_15_reg_875(31 downto 2);
                    ap_reg_pp0_iter1_tmp_17_reg_885(31 downto 2) <= tmp_17_reg_885(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    ap_reg_pp0_iter1_tmp_19_reg_905(31 downto 2) <= tmp_19_reg_905(31 downto 2);
                    ap_reg_pp0_iter1_tmp_21_reg_915(31 downto 2) <= tmp_21_reg_915(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    ap_reg_pp0_iter1_tmp_23_reg_935(31 downto 2) <= tmp_23_reg_935(31 downto 2);
                    ap_reg_pp0_iter1_tmp_25_reg_945(31 downto 2) <= tmp_25_reg_945(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    ap_reg_pp0_iter1_tmp_27_reg_965(31 downto 2) <= tmp_27_reg_965(31 downto 2);
                    ap_reg_pp0_iter1_tmp_29_reg_975(31 downto 2) <= tmp_29_reg_975(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    ap_reg_pp0_iter1_tmp_31_reg_995(31 downto 2) <= tmp_31_reg_995(31 downto 2);
                    ap_reg_pp0_iter1_tmp_33_reg_1005(31 downto 2) <= tmp_33_reg_1005(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    ap_reg_pp0_iter1_tmp_35_reg_1030(31 downto 2) <= tmp_35_reg_1030(31 downto 2);
                    ap_reg_pp0_iter1_tmp_37_reg_1040(31 downto 2) <= tmp_37_reg_1040(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_reg_pp0_iter1_tmp_7_reg_805(31 downto 2) <= tmp_7_reg_805(31 downto 2);
                    ap_reg_pp0_iter1_tmp_9_reg_815(31 downto 2) <= tmp_9_reg_815(31 downto 2);
                ap_reg_pp0_iter1_tmp_reg_772 <= tmp_reg_772;
                ap_reg_pp0_iter2_tmp_reg_772 <= ap_reg_pp0_iter1_tmp_reg_772;
                tmp_reg_772 <= tmp_fu_409_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_409_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    base_idx_reg_787(21 downto 2) <= base_idx_fu_469_p2(21 downto 2);
                next_urem_reg_781 <= next_urem_fu_421_p2;
                    tmp_7_reg_805(31 downto 2) <= tmp_7_fu_479_p1(31 downto 2);
                    tmp_9_reg_815(31 downto 2) <= tmp_9_fu_490_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                idx_urem_reg_1015 <= idx_urem_fu_673_p3;
                indata_12_reg_1020 <= img_q0;
                indata_13_reg_1025 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                indata_0_reg_830 <= img_q0;
                indata_1_reg_835 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                indata_10_reg_985 <= img_q0;
                indata_11_reg_990 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                indata_2_reg_865 <= img_q0;
                indata_3_reg_870 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                indata_4_reg_895 <= img_q0;
                indata_5_reg_900 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                indata_6_reg_925 <= img_q0;
                indata_7_reg_930 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                indata_8_reg_955 <= img_q0;
                indata_9_reg_960 <= img_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mark_idx_1_reg_776 <= mark_idx_1_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mark_load_reg_860 <= mark_q0;
                    tmp_11_reg_840(31 downto 2) <= tmp_11_fu_509_p1(31 downto 2);
                    tmp_13_reg_850(31 downto 2) <= tmp_13_fu_523_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                outdata_0_reg_1050 <= grp_add_watermark_fu_386_ap_return_0;
                outdata_10_reg_1100 <= grp_add_watermark_fu_386_ap_return_10;
                outdata_11_reg_1105 <= grp_add_watermark_fu_386_ap_return_11;
                outdata_12_reg_1110 <= grp_add_watermark_fu_386_ap_return_12;
                outdata_13_reg_1115 <= grp_add_watermark_fu_386_ap_return_13;
                outdata_14_reg_1120 <= grp_add_watermark_fu_386_ap_return_14;
                outdata_15_reg_1125 <= grp_add_watermark_fu_386_ap_return_15;
                outdata_1_reg_1055 <= grp_add_watermark_fu_386_ap_return_1;
                outdata_2_reg_1060 <= grp_add_watermark_fu_386_ap_return_2;
                outdata_3_reg_1065 <= grp_add_watermark_fu_386_ap_return_3;
                outdata_4_reg_1070 <= grp_add_watermark_fu_386_ap_return_4;
                outdata_5_reg_1075 <= grp_add_watermark_fu_386_ap_return_5;
                outdata_6_reg_1080 <= grp_add_watermark_fu_386_ap_return_6;
                outdata_7_reg_1085 <= grp_add_watermark_fu_386_ap_return_7;
                outdata_8_reg_1090 <= grp_add_watermark_fu_386_ap_return_8;
                outdata_9_reg_1095 <= grp_add_watermark_fu_386_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    tmp_15_reg_875(31 downto 2) <= tmp_15_fu_537_p1(31 downto 2);
                    tmp_17_reg_885(31 downto 2) <= tmp_17_fu_551_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    tmp_19_reg_905(31 downto 2) <= tmp_19_fu_565_p1(31 downto 2);
                    tmp_21_reg_915(31 downto 2) <= tmp_21_fu_579_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    tmp_23_reg_935(31 downto 2) <= tmp_23_fu_593_p1(31 downto 2);
                    tmp_25_reg_945(31 downto 2) <= tmp_25_fu_607_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    tmp_27_reg_965(31 downto 2) <= tmp_27_fu_621_p1(31 downto 2);
                    tmp_29_reg_975(31 downto 2) <= tmp_29_fu_635_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    tmp_31_reg_995(31 downto 2) <= tmp_31_fu_649_p1(31 downto 2);
                    tmp_33_reg_1005(31 downto 2) <= tmp_33_fu_663_p1(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    tmp_35_reg_1030(31 downto 2) <= tmp_35_fu_689_p1(31 downto 2);
                    tmp_37_reg_1040(31 downto 2) <= tmp_37_fu_703_p1(31 downto 2);
            end if;
        end if;
    end process;
    base_idx_reg_787(1 downto 0) <= "00";
    tmp_7_reg_805(1 downto 0) <= "00";
    tmp_7_reg_805(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_7_reg_805(1 downto 0) <= "00";
    ap_reg_pp0_iter1_tmp_7_reg_805(63 downto 32) <= "00000000000000000000000000000000";
    tmp_9_reg_815(1 downto 0) <= "01";
    tmp_9_reg_815(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_9_reg_815(1 downto 0) <= "01";
    ap_reg_pp0_iter1_tmp_9_reg_815(63 downto 32) <= "00000000000000000000000000000000";
    tmp_11_reg_840(1 downto 0) <= "10";
    tmp_11_reg_840(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_11_reg_840(1 downto 0) <= "10";
    ap_reg_pp0_iter1_tmp_11_reg_840(63 downto 32) <= "00000000000000000000000000000000";
    tmp_13_reg_850(1 downto 0) <= "11";
    tmp_13_reg_850(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_13_reg_850(1 downto 0) <= "11";
    ap_reg_pp0_iter1_tmp_13_reg_850(63 downto 32) <= "00000000000000000000000000000000";
    tmp_15_reg_875(1 downto 0) <= "00";
    tmp_15_reg_875(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_15_reg_875(1 downto 0) <= "00";
    ap_reg_pp0_iter1_tmp_15_reg_875(63 downto 32) <= "00000000000000000000000000000000";
    tmp_17_reg_885(1 downto 0) <= "01";
    tmp_17_reg_885(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_17_reg_885(1 downto 0) <= "01";
    ap_reg_pp0_iter1_tmp_17_reg_885(63 downto 32) <= "00000000000000000000000000000000";
    tmp_19_reg_905(1 downto 0) <= "10";
    tmp_19_reg_905(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_19_reg_905(1 downto 0) <= "10";
    ap_reg_pp0_iter1_tmp_19_reg_905(63 downto 32) <= "00000000000000000000000000000000";
    tmp_21_reg_915(1 downto 0) <= "11";
    tmp_21_reg_915(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_21_reg_915(1 downto 0) <= "11";
    ap_reg_pp0_iter1_tmp_21_reg_915(63 downto 32) <= "00000000000000000000000000000000";
    tmp_23_reg_935(1 downto 0) <= "00";
    tmp_23_reg_935(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_23_reg_935(1 downto 0) <= "00";
    ap_reg_pp0_iter1_tmp_23_reg_935(63 downto 32) <= "00000000000000000000000000000000";
    tmp_25_reg_945(1 downto 0) <= "01";
    tmp_25_reg_945(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_25_reg_945(1 downto 0) <= "01";
    ap_reg_pp0_iter1_tmp_25_reg_945(63 downto 32) <= "00000000000000000000000000000000";
    tmp_27_reg_965(1 downto 0) <= "10";
    tmp_27_reg_965(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_27_reg_965(1 downto 0) <= "10";
    ap_reg_pp0_iter1_tmp_27_reg_965(63 downto 32) <= "00000000000000000000000000000000";
    tmp_29_reg_975(1 downto 0) <= "11";
    tmp_29_reg_975(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_29_reg_975(1 downto 0) <= "11";
    ap_reg_pp0_iter1_tmp_29_reg_975(63 downto 32) <= "00000000000000000000000000000000";
    tmp_31_reg_995(1 downto 0) <= "00";
    tmp_31_reg_995(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_31_reg_995(1 downto 0) <= "00";
    ap_reg_pp0_iter1_tmp_31_reg_995(63 downto 32) <= "00000000000000000000000000000000";
    tmp_33_reg_1005(1 downto 0) <= "01";
    tmp_33_reg_1005(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_33_reg_1005(1 downto 0) <= "01";
    ap_reg_pp0_iter1_tmp_33_reg_1005(63 downto 32) <= "00000000000000000000000000000000";
    tmp_35_reg_1030(1 downto 0) <= "10";
    tmp_35_reg_1030(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_35_reg_1030(1 downto 0) <= "10";
    ap_reg_pp0_iter1_tmp_35_reg_1030(63 downto 32) <= "00000000000000000000000000000000";
    tmp_37_reg_1040(1 downto 0) <= "11";
    tmp_37_reg_1040(63 downto 32) <= "00000000000000000000000000000000";
    ap_reg_pp0_iter1_tmp_37_reg_1040(1 downto 0) <= "11";
    ap_reg_pp0_iter1_tmp_37_reg_1040(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_409_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((tmp_fu_409_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((tmp_fu_409_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state20 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_fu_409_p2)
    begin
        if ((tmp_fu_409_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_mark_idx_phi_fu_368_p4_assign_proc : process(mark_idx_reg_364, tmp_reg_772, ap_CS_fsm_pp0_stage0, mark_idx_1_reg_776, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_mark_idx_phi_fu_368_p4 <= mark_idx_1_reg_776;
        else 
            ap_phi_mux_mark_idx_phi_fu_368_p4 <= mark_idx_reg_364;
        end if; 
    end process;


    ap_phi_mux_tmp_49_phi_fu_379_p4_assign_proc : process(tmp_49_reg_375, tmp_reg_772, ap_CS_fsm_pp0_stage0, idx_urem_reg_1015, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_49_phi_fu_379_p4 <= idx_urem_reg_1015;
        else 
            ap_phi_mux_tmp_49_phi_fu_379_p4 <= tmp_49_reg_375;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

        base_idx_cast_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(base_idx_fu_469_p2),32));

    base_idx_fu_469_p2 <= std_logic_vector(unsigned(tmp_6_cast_cast_fu_465_p1) + unsigned(tmp_5_cast_fu_449_p1));
    idx_urem_fu_673_p3 <= 
        next_urem_reg_781 when (tmp_48_fu_668_p2(0) = '1') else 
        ap_const_lv16_0;

    img_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_7_fu_479_p1, ap_CS_fsm_pp0_stage1, tmp_11_fu_509_p1, ap_CS_fsm_pp0_stage2, tmp_15_fu_537_p1, ap_CS_fsm_pp0_stage3, tmp_19_fu_565_p1, ap_CS_fsm_pp0_stage4, tmp_23_fu_593_p1, ap_CS_fsm_pp0_stage5, tmp_27_fu_621_p1, ap_CS_fsm_pp0_stage6, tmp_31_fu_649_p1, ap_CS_fsm_pp0_stage7, tmp_35_fu_689_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                img_address0 <= tmp_35_fu_689_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                img_address0 <= tmp_31_fu_649_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                img_address0 <= tmp_27_fu_621_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                img_address0 <= tmp_23_fu_593_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                img_address0 <= tmp_19_fu_565_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                img_address0 <= tmp_15_fu_537_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_address0 <= tmp_11_fu_509_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_address0 <= tmp_7_fu_479_p1(20 - 1 downto 0);
            else 
                img_address0 <= "XXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            img_address0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_9_fu_490_p1, ap_CS_fsm_pp0_stage1, tmp_13_fu_523_p1, ap_CS_fsm_pp0_stage2, tmp_17_fu_551_p1, ap_CS_fsm_pp0_stage3, tmp_21_fu_579_p1, ap_CS_fsm_pp0_stage4, tmp_25_fu_607_p1, ap_CS_fsm_pp0_stage5, tmp_29_fu_635_p1, ap_CS_fsm_pp0_stage6, tmp_33_fu_663_p1, ap_CS_fsm_pp0_stage7, tmp_37_fu_703_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                img_address1 <= tmp_37_fu_703_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                img_address1 <= tmp_33_fu_663_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                img_address1 <= tmp_29_fu_635_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                img_address1 <= tmp_25_fu_607_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                img_address1 <= tmp_21_fu_579_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                img_address1 <= tmp_17_fu_551_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_address1 <= tmp_13_fu_523_p1(20 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_address1 <= tmp_9_fu_490_p1(20 - 1 downto 0);
            else 
                img_address1 <= "XXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            img_address1 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_ce0 <= ap_const_logic_1;
        else 
            img_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_ce1 <= ap_const_logic_1;
        else 
            img_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    mark_address0 <= tmp_38_fu_495_p1(16 - 1 downto 0);

    mark_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mark_ce0 <= ap_const_logic_1;
        else 
            mark_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mark_idx_1_fu_415_p2 <= std_logic_vector(unsigned(ap_phi_mux_mark_idx_phi_fu_368_p4) + unsigned(ap_const_lv16_1));
    mark_idx_cast_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_mark_idx_phi_fu_368_p4),17));
    next_urem_fu_421_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_phi_mux_tmp_49_phi_fu_379_p4));

    out_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_reg_pp0_iter1_tmp_7_reg_805, ap_CS_fsm_pp0_stage1, ap_reg_pp0_iter1_tmp_11_reg_840, ap_CS_fsm_pp0_stage2, ap_reg_pp0_iter1_tmp_15_reg_875, ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_19_reg_905, ap_CS_fsm_pp0_stage4, ap_reg_pp0_iter1_tmp_23_reg_935, ap_CS_fsm_pp0_stage5, ap_reg_pp0_iter1_tmp_27_reg_965, ap_CS_fsm_pp0_stage6, ap_reg_pp0_iter1_tmp_31_reg_995, ap_CS_fsm_pp0_stage7, ap_reg_pp0_iter1_tmp_35_reg_1030, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_35_reg_1030(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_31_reg_995(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_27_reg_965(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_23_reg_935(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_19_reg_905(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_15_reg_875(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_11_reg_840(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_r_address0 <= ap_reg_pp0_iter1_tmp_7_reg_805(20 - 1 downto 0);
        else 
            out_r_address0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_reg_pp0_iter1_tmp_9_reg_815, ap_CS_fsm_pp0_stage1, ap_reg_pp0_iter1_tmp_13_reg_850, ap_CS_fsm_pp0_stage2, ap_reg_pp0_iter1_tmp_17_reg_885, ap_CS_fsm_pp0_stage3, ap_reg_pp0_iter1_tmp_21_reg_915, ap_CS_fsm_pp0_stage4, ap_reg_pp0_iter1_tmp_25_reg_945, ap_CS_fsm_pp0_stage5, ap_reg_pp0_iter1_tmp_29_reg_975, ap_CS_fsm_pp0_stage6, ap_reg_pp0_iter1_tmp_33_reg_1005, ap_CS_fsm_pp0_stage7, ap_reg_pp0_iter1_tmp_37_reg_1040, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_37_reg_1040(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_33_reg_1005(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_29_reg_975(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_25_reg_945(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_21_reg_915(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_17_reg_885(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_13_reg_850(20 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_r_address1 <= ap_reg_pp0_iter1_tmp_9_reg_815(20 - 1 downto 0);
        else 
            out_r_address1 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            out_r_ce1 <= ap_const_logic_1;
        else 
            out_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, outdata_0_reg_1050, outdata_2_reg_1060, outdata_4_reg_1070, outdata_6_reg_1080, outdata_8_reg_1090, outdata_10_reg_1100, outdata_12_reg_1110, outdata_14_reg_1120, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_d0 <= outdata_14_reg_1120;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_r_d0 <= outdata_12_reg_1110;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            out_r_d0 <= outdata_10_reg_1100;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            out_r_d0 <= outdata_8_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            out_r_d0 <= outdata_6_reg_1080;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            out_r_d0 <= outdata_4_reg_1070;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_d0 <= outdata_2_reg_1060;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_r_d0 <= outdata_0_reg_1050;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, outdata_1_reg_1055, outdata_3_reg_1065, outdata_5_reg_1075, outdata_7_reg_1085, outdata_9_reg_1095, outdata_11_reg_1105, outdata_13_reg_1115, outdata_15_reg_1125, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_d1 <= outdata_15_reg_1125;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            out_r_d1 <= outdata_13_reg_1115;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            out_r_d1 <= outdata_11_reg_1105;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            out_r_d1 <= outdata_9_reg_1095;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            out_r_d1 <= outdata_7_reg_1085;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            out_r_d1 <= outdata_5_reg_1075;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_d1 <= outdata_3_reg_1065;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_r_d1 <= outdata_1_reg_1055;
        else 
            out_r_d1 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_reg_pp0_iter1_tmp_reg_772, ap_reg_pp0_iter2_tmp_reg_772, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_reg_pp0_iter2_tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_reg_pp0_iter1_tmp_reg_772, ap_reg_pp0_iter2_tmp_reg_772, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_reg_pp0_iter1_tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_reg_pp0_iter2_tmp_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            out_r_we1 <= ap_const_logic_1;
        else 
            out_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_10_cast_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_500_p2),32));

    tmp_10_fu_500_p2 <= (base_idx_reg_787 or ap_const_lv22_2);
    tmp_11_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_cast_fu_505_p1),64));
        tmp_12_cast_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_514_p2),32));

    tmp_12_fu_514_p2 <= (base_idx_reg_787 or ap_const_lv22_3);
    tmp_13_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_cast_fu_519_p1),64));
        tmp_14_cast_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_fu_528_p2),32));

    tmp_14_fu_528_p2 <= std_logic_vector(unsigned(ap_const_lv22_320) + unsigned(base_idx_reg_787));
    tmp_15_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_cast_fu_533_p1),64));
        tmp_16_cast_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_fu_542_p2),32));

    tmp_16_fu_542_p2 <= std_logic_vector(unsigned(ap_const_lv22_321) + unsigned(base_idx_reg_787));
    tmp_17_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_cast_fu_547_p1),64));
        tmp_18_cast_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_556_p2),32));

    tmp_18_fu_556_p2 <= std_logic_vector(unsigned(ap_const_lv22_322) + unsigned(base_idx_reg_787));
    tmp_19_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_cast_fu_561_p1),64));
        tmp_20_cast_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_fu_570_p2),32));

    tmp_20_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv22_323) + unsigned(base_idx_reg_787));
    tmp_21_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_cast_fu_575_p1),64));
        tmp_22_cast_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_584_p2),32));

    tmp_22_fu_584_p2 <= std_logic_vector(unsigned(ap_const_lv22_640) + unsigned(base_idx_reg_787));
    tmp_23_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_cast_fu_589_p1),64));
        tmp_24_cast_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_598_p2),32));

    tmp_24_fu_598_p2 <= std_logic_vector(unsigned(ap_const_lv22_641) + unsigned(base_idx_reg_787));
    tmp_25_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_cast_fu_603_p1),64));
        tmp_26_cast_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_612_p2),32));

    tmp_26_fu_612_p2 <= std_logic_vector(unsigned(ap_const_lv22_642) + unsigned(base_idx_reg_787));
    tmp_27_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_cast_fu_617_p1),64));
        tmp_28_cast_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_626_p2),32));

    tmp_28_fu_626_p2 <= std_logic_vector(unsigned(ap_const_lv22_643) + unsigned(base_idx_reg_787));
    tmp_29_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_cast_fu_631_p1),64));
    tmp_2_cast_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_tmp_49_phi_fu_379_p4),17));
        tmp_30_cast_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_640_p2),32));

    tmp_30_fu_640_p2 <= std_logic_vector(unsigned(ap_const_lv22_960) + unsigned(base_idx_reg_787));
    tmp_31_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_cast_fu_645_p1),64));
        tmp_32_cast_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_32_fu_654_p2),32));

    tmp_32_fu_654_p2 <= std_logic_vector(unsigned(ap_const_lv22_961) + unsigned(base_idx_reg_787));
    tmp_33_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_cast_fu_659_p1),64));
        tmp_34_cast_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_34_fu_680_p2),32));

    tmp_34_fu_680_p2 <= std_logic_vector(unsigned(ap_const_lv22_962) + unsigned(base_idx_reg_787));
    tmp_35_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_cast_fu_685_p1),64));
        tmp_36_cast_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_36_fu_694_p2),32));

    tmp_36_fu_694_p2 <= std_logic_vector(unsigned(ap_const_lv22_963) + unsigned(base_idx_reg_787));
    tmp_37_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_cast_fu_699_p1),64));
    tmp_38_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_mark_idx_phi_fu_368_p4),64));
    tmp_39_fu_441_p3 <= (tmp_s_fu_435_p2 & ap_const_lv4_0);
    tmp_48_fu_668_p2 <= "1" when (unsigned(next_urem_reg_781) < unsigned(ap_const_lv16_C8)) else "0";
    tmp_50_fu_453_p1 <= ap_phi_mux_tmp_49_phi_fu_379_p4(8 - 1 downto 0);
        tmp_5_cast_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_39_fu_441_p3),22));

    tmp_6_cast_cast_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_457_p3),22));
    tmp_6_fu_457_p3 <= (tmp_50_fu_453_p1 & ap_const_lv2_0);
    tmp_7_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(base_idx_cast_fu_475_p1),64));
    tmp_8_fu_484_p2 <= (base_idx_cast_fu_475_p1 or ap_const_lv32_1);
    tmp_9_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_484_p2),64));
    tmp_fu_409_p2 <= "1" when (ap_phi_mux_mark_idx_phi_fu_368_p4 = ap_const_lv16_9C40) else "0";
    tmp_s_fu_435_p2 <= std_logic_vector(unsigned(mark_idx_cast_fu_427_p1) - unsigned(tmp_2_cast_fu_431_p1));
end behav;
