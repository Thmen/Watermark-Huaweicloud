-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity add_watermark is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    indata_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_4_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_5_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_6_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_7_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_8_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_9_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_10_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_11_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_12_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_13_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_14_read : IN STD_LOGIC_VECTOR (7 downto 0);
    indata_15_read : IN STD_LOGIC_VECTOR (7 downto 0);
    mark : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of add_watermark is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv20_A : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001010";
    constant ap_const_lv20_19 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000011001";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal temp_0_0_reg_918 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal temp_0_1_reg_923 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_0_2_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_0_3_reg_933 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_1_0_reg_938 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_1_1_reg_943 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_1_2_reg_948 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_1_3_reg_953 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_2_0_reg_958 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_2_1_reg_963 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_2_2_reg_968 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_2_3_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_3_0_reg_978 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_3_1_reg_983 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_3_2_reg_988 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_3_3_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_998 : STD_LOGIC_VECTOR (0 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_ready : STD_LOGIC;
    signal call_ret5_integer_idct_fu_160_src_0_1_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_0_3_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_1_0_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_1_1_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_1_2_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_1_3_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_2_1_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_2_3_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_3_0_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_3_1_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_3_2_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_src_3_3_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret5_integer_idct_fu_160_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_ready : STD_LOGIC;
    signal call_ret2_i_dct_step_fu_180_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_dct_step_fu_180_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_ready : STD_LOGIC;
    signal call_ret_i_dct_step_fu_200_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_dct_step_fu_200_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_ready : STD_LOGIC;
    signal call_ret3_read_data_fu_220_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_read_data_fu_220_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_write_data_fu_256_ap_ready : STD_LOGIC;
    signal call_ret_write_data_fu_256_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_write_data_fu_256_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_temp_qft_0_0_V_fu_890_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal buf_temp_qft_0_2_V_fu_897_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_2_0_V_fu_904_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_2_2_V_fu_911_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_i_fu_502_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_i_fu_494_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_i_cast_fu_510_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_i_fu_533_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl3_i_fu_525_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_i_cast_fu_541_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl6_i_fu_559_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl5_i_fu_551_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl6_i_cast_fu_567_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl8_i_fu_595_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl7_i_fu_587_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl8_i_cast_fu_603_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl10_i_fu_634_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl9_i_fu_626_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl10_i_cast_fu_642_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl12_i_fu_664_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl11_i_fu_656_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl12_i_cast_fu_672_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl15_i_fu_691_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl14_i_fu_683_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl15_i_cast_fu_699_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl13_i_fu_726_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_i_fu_718_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl13_i_cast_fu_734_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_0_3_V_fu_545_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_2_1_V_fu_646_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_1_2_V_fu_607_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_3_0_V_fu_703_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_3_0_V_1_fu_772_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_2_1_V_1_fu_760_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_1_2_V_1_fu_766_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_0_3_V_1_fu_754_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal buf_temp_qft_0_0_V_fu_890_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_temp_qft_0_2_V_fu_897_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_temp_qft_2_0_V_fu_904_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_temp_qft_2_2_V_fu_911_p1 : STD_LOGIC_VECTOR (5 downto 0);

    component integer_idct IS
    port (
        ap_ready : OUT STD_LOGIC;
        src_0_0_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_0_1_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_0_2_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_0_3_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_1_0_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_1_1_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_1_2_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_1_3_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_2_0_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_2_1_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_2_2_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_2_3_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_3_0_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_3_1_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_3_2_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        src_3_3_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dct_step IS
    port (
        ap_ready : OUT STD_LOGIC;
        src_0_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_0_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_0_2_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_0_3_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_1_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_1_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_1_2_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_1_3_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_2_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_2_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_2_2_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_2_3_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_3_0_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_3_1_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_3_2_read : IN STD_LOGIC_VECTOR (15 downto 0);
        src_3_3_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component read_data IS
    port (
        ap_ready : OUT STD_LOGIC;
        input_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_4_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_5_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_6_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_7_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_8_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_9_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_10_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_11_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_12_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_13_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_14_read : IN STD_LOGIC_VECTOR (7 downto 0);
        input_15_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component write_data IS
    port (
        ap_ready : OUT STD_LOGIC;
        buf_0_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_0_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_0_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_0_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_1_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_1_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_1_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_1_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_2_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_2_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_2_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_2_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_3_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_3_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_3_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_3_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component img_proc_mul_mul_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    call_ret5_integer_idct_fu_160 : component integer_idct
    port map (
        ap_ready => call_ret5_integer_idct_fu_160_ap_ready,
        src_0_0_V_read => buf_temp_qft_0_0_V_fu_890_p2,
        src_0_1_V_read => call_ret5_integer_idct_fu_160_src_0_1_V_read,
        src_0_2_V_read => buf_temp_qft_0_2_V_fu_897_p2,
        src_0_3_V_read => call_ret5_integer_idct_fu_160_src_0_3_V_read,
        src_1_0_V_read => call_ret5_integer_idct_fu_160_src_1_0_V_read,
        src_1_1_V_read => call_ret5_integer_idct_fu_160_src_1_1_V_read,
        src_1_2_V_read => call_ret5_integer_idct_fu_160_src_1_2_V_read,
        src_1_3_V_read => call_ret5_integer_idct_fu_160_src_1_3_V_read,
        src_2_0_V_read => buf_temp_qft_2_0_V_fu_904_p2,
        src_2_1_V_read => call_ret5_integer_idct_fu_160_src_2_1_V_read,
        src_2_2_V_read => buf_temp_qft_2_2_V_fu_911_p2,
        src_2_3_V_read => call_ret5_integer_idct_fu_160_src_2_3_V_read,
        src_3_0_V_read => call_ret5_integer_idct_fu_160_src_3_0_V_read,
        src_3_1_V_read => call_ret5_integer_idct_fu_160_src_3_1_V_read,
        src_3_2_V_read => call_ret5_integer_idct_fu_160_src_3_2_V_read,
        src_3_3_V_read => call_ret5_integer_idct_fu_160_src_3_3_V_read,
        ap_return_0 => call_ret5_integer_idct_fu_160_ap_return_0,
        ap_return_1 => call_ret5_integer_idct_fu_160_ap_return_1,
        ap_return_2 => call_ret5_integer_idct_fu_160_ap_return_2,
        ap_return_3 => call_ret5_integer_idct_fu_160_ap_return_3,
        ap_return_4 => call_ret5_integer_idct_fu_160_ap_return_4,
        ap_return_5 => call_ret5_integer_idct_fu_160_ap_return_5,
        ap_return_6 => call_ret5_integer_idct_fu_160_ap_return_6,
        ap_return_7 => call_ret5_integer_idct_fu_160_ap_return_7,
        ap_return_8 => call_ret5_integer_idct_fu_160_ap_return_8,
        ap_return_9 => call_ret5_integer_idct_fu_160_ap_return_9,
        ap_return_10 => call_ret5_integer_idct_fu_160_ap_return_10,
        ap_return_11 => call_ret5_integer_idct_fu_160_ap_return_11,
        ap_return_12 => call_ret5_integer_idct_fu_160_ap_return_12,
        ap_return_13 => call_ret5_integer_idct_fu_160_ap_return_13,
        ap_return_14 => call_ret5_integer_idct_fu_160_ap_return_14,
        ap_return_15 => call_ret5_integer_idct_fu_160_ap_return_15);

    call_ret2_i_dct_step_fu_180 : component dct_step
    port map (
        ap_ready => call_ret2_i_dct_step_fu_180_ap_ready,
        src_0_0_read => call_ret3_read_data_fu_220_ap_return_0,
        src_0_1_read => call_ret3_read_data_fu_220_ap_return_1,
        src_0_2_read => call_ret3_read_data_fu_220_ap_return_2,
        src_0_3_read => call_ret3_read_data_fu_220_ap_return_3,
        src_1_0_read => call_ret3_read_data_fu_220_ap_return_4,
        src_1_1_read => call_ret3_read_data_fu_220_ap_return_5,
        src_1_2_read => call_ret3_read_data_fu_220_ap_return_6,
        src_1_3_read => call_ret3_read_data_fu_220_ap_return_7,
        src_2_0_read => call_ret3_read_data_fu_220_ap_return_8,
        src_2_1_read => call_ret3_read_data_fu_220_ap_return_9,
        src_2_2_read => call_ret3_read_data_fu_220_ap_return_10,
        src_2_3_read => call_ret3_read_data_fu_220_ap_return_11,
        src_3_0_read => call_ret3_read_data_fu_220_ap_return_12,
        src_3_1_read => call_ret3_read_data_fu_220_ap_return_13,
        src_3_2_read => call_ret3_read_data_fu_220_ap_return_14,
        src_3_3_read => call_ret3_read_data_fu_220_ap_return_15,
        ap_return_0 => call_ret2_i_dct_step_fu_180_ap_return_0,
        ap_return_1 => call_ret2_i_dct_step_fu_180_ap_return_1,
        ap_return_2 => call_ret2_i_dct_step_fu_180_ap_return_2,
        ap_return_3 => call_ret2_i_dct_step_fu_180_ap_return_3,
        ap_return_4 => call_ret2_i_dct_step_fu_180_ap_return_4,
        ap_return_5 => call_ret2_i_dct_step_fu_180_ap_return_5,
        ap_return_6 => call_ret2_i_dct_step_fu_180_ap_return_6,
        ap_return_7 => call_ret2_i_dct_step_fu_180_ap_return_7,
        ap_return_8 => call_ret2_i_dct_step_fu_180_ap_return_8,
        ap_return_9 => call_ret2_i_dct_step_fu_180_ap_return_9,
        ap_return_10 => call_ret2_i_dct_step_fu_180_ap_return_10,
        ap_return_11 => call_ret2_i_dct_step_fu_180_ap_return_11,
        ap_return_12 => call_ret2_i_dct_step_fu_180_ap_return_12,
        ap_return_13 => call_ret2_i_dct_step_fu_180_ap_return_13,
        ap_return_14 => call_ret2_i_dct_step_fu_180_ap_return_14,
        ap_return_15 => call_ret2_i_dct_step_fu_180_ap_return_15);

    call_ret_i_dct_step_fu_200 : component dct_step
    port map (
        ap_ready => call_ret_i_dct_step_fu_200_ap_ready,
        src_0_0_read => temp_0_0_reg_918,
        src_0_1_read => temp_0_1_reg_923,
        src_0_2_read => temp_0_2_reg_928,
        src_0_3_read => temp_0_3_reg_933,
        src_1_0_read => temp_1_0_reg_938,
        src_1_1_read => temp_1_1_reg_943,
        src_1_2_read => temp_1_2_reg_948,
        src_1_3_read => temp_1_3_reg_953,
        src_2_0_read => temp_2_0_reg_958,
        src_2_1_read => temp_2_1_reg_963,
        src_2_2_read => temp_2_2_reg_968,
        src_2_3_read => temp_2_3_reg_973,
        src_3_0_read => temp_3_0_reg_978,
        src_3_1_read => temp_3_1_reg_983,
        src_3_2_read => temp_3_2_reg_988,
        src_3_3_read => temp_3_3_reg_993,
        ap_return_0 => call_ret_i_dct_step_fu_200_ap_return_0,
        ap_return_1 => call_ret_i_dct_step_fu_200_ap_return_1,
        ap_return_2 => call_ret_i_dct_step_fu_200_ap_return_2,
        ap_return_3 => call_ret_i_dct_step_fu_200_ap_return_3,
        ap_return_4 => call_ret_i_dct_step_fu_200_ap_return_4,
        ap_return_5 => call_ret_i_dct_step_fu_200_ap_return_5,
        ap_return_6 => call_ret_i_dct_step_fu_200_ap_return_6,
        ap_return_7 => call_ret_i_dct_step_fu_200_ap_return_7,
        ap_return_8 => call_ret_i_dct_step_fu_200_ap_return_8,
        ap_return_9 => call_ret_i_dct_step_fu_200_ap_return_9,
        ap_return_10 => call_ret_i_dct_step_fu_200_ap_return_10,
        ap_return_11 => call_ret_i_dct_step_fu_200_ap_return_11,
        ap_return_12 => call_ret_i_dct_step_fu_200_ap_return_12,
        ap_return_13 => call_ret_i_dct_step_fu_200_ap_return_13,
        ap_return_14 => call_ret_i_dct_step_fu_200_ap_return_14,
        ap_return_15 => call_ret_i_dct_step_fu_200_ap_return_15);

    call_ret3_read_data_fu_220 : component read_data
    port map (
        ap_ready => call_ret3_read_data_fu_220_ap_ready,
        input_0_read => indata_0_read,
        input_1_read => indata_1_read,
        input_2_read => indata_2_read,
        input_3_read => indata_3_read,
        input_4_read => indata_4_read,
        input_5_read => indata_5_read,
        input_6_read => indata_6_read,
        input_7_read => indata_7_read,
        input_8_read => indata_8_read,
        input_9_read => indata_9_read,
        input_10_read => indata_10_read,
        input_11_read => indata_11_read,
        input_12_read => indata_12_read,
        input_13_read => indata_13_read,
        input_14_read => indata_14_read,
        input_15_read => indata_15_read,
        ap_return_0 => call_ret3_read_data_fu_220_ap_return_0,
        ap_return_1 => call_ret3_read_data_fu_220_ap_return_1,
        ap_return_2 => call_ret3_read_data_fu_220_ap_return_2,
        ap_return_3 => call_ret3_read_data_fu_220_ap_return_3,
        ap_return_4 => call_ret3_read_data_fu_220_ap_return_4,
        ap_return_5 => call_ret3_read_data_fu_220_ap_return_5,
        ap_return_6 => call_ret3_read_data_fu_220_ap_return_6,
        ap_return_7 => call_ret3_read_data_fu_220_ap_return_7,
        ap_return_8 => call_ret3_read_data_fu_220_ap_return_8,
        ap_return_9 => call_ret3_read_data_fu_220_ap_return_9,
        ap_return_10 => call_ret3_read_data_fu_220_ap_return_10,
        ap_return_11 => call_ret3_read_data_fu_220_ap_return_11,
        ap_return_12 => call_ret3_read_data_fu_220_ap_return_12,
        ap_return_13 => call_ret3_read_data_fu_220_ap_return_13,
        ap_return_14 => call_ret3_read_data_fu_220_ap_return_14,
        ap_return_15 => call_ret3_read_data_fu_220_ap_return_15);

    call_ret_write_data_fu_256 : component write_data
    port map (
        ap_ready => call_ret_write_data_fu_256_ap_ready,
        buf_0_0_read => call_ret5_integer_idct_fu_160_ap_return_0,
        buf_0_1_read => call_ret5_integer_idct_fu_160_ap_return_1,
        buf_0_2_read => call_ret5_integer_idct_fu_160_ap_return_2,
        buf_0_3_read => call_ret5_integer_idct_fu_160_ap_return_3,
        buf_1_0_read => call_ret5_integer_idct_fu_160_ap_return_4,
        buf_1_1_read => call_ret5_integer_idct_fu_160_ap_return_5,
        buf_1_2_read => call_ret5_integer_idct_fu_160_ap_return_6,
        buf_1_3_read => call_ret5_integer_idct_fu_160_ap_return_7,
        buf_2_0_read => call_ret5_integer_idct_fu_160_ap_return_8,
        buf_2_1_read => call_ret5_integer_idct_fu_160_ap_return_9,
        buf_2_2_read => call_ret5_integer_idct_fu_160_ap_return_10,
        buf_2_3_read => call_ret5_integer_idct_fu_160_ap_return_11,
        buf_3_0_read => call_ret5_integer_idct_fu_160_ap_return_12,
        buf_3_1_read => call_ret5_integer_idct_fu_160_ap_return_13,
        buf_3_2_read => call_ret5_integer_idct_fu_160_ap_return_14,
        buf_3_3_read => call_ret5_integer_idct_fu_160_ap_return_15,
        ap_return_0 => call_ret_write_data_fu_256_ap_return_0,
        ap_return_1 => call_ret_write_data_fu_256_ap_return_1,
        ap_return_2 => call_ret_write_data_fu_256_ap_return_2,
        ap_return_3 => call_ret_write_data_fu_256_ap_return_3,
        ap_return_4 => call_ret_write_data_fu_256_ap_return_4,
        ap_return_5 => call_ret_write_data_fu_256_ap_return_5,
        ap_return_6 => call_ret_write_data_fu_256_ap_return_6,
        ap_return_7 => call_ret_write_data_fu_256_ap_return_7,
        ap_return_8 => call_ret_write_data_fu_256_ap_return_8,
        ap_return_9 => call_ret_write_data_fu_256_ap_return_9,
        ap_return_10 => call_ret_write_data_fu_256_ap_return_10,
        ap_return_11 => call_ret_write_data_fu_256_ap_return_11,
        ap_return_12 => call_ret_write_data_fu_256_ap_return_12,
        ap_return_13 => call_ret_write_data_fu_256_ap_return_13,
        ap_return_14 => call_ret_write_data_fu_256_ap_return_14,
        ap_return_15 => call_ret_write_data_fu_256_ap_return_15);

    img_proc_mul_mul_bkb_U81 : component img_proc_mul_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_i_dct_step_fu_200_ap_return_0,
        din1 => buf_temp_qft_0_0_V_fu_890_p1,
        dout => buf_temp_qft_0_0_V_fu_890_p2);

    img_proc_mul_mul_bkb_U82 : component img_proc_mul_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_i_dct_step_fu_200_ap_return_2,
        din1 => buf_temp_qft_0_2_V_fu_897_p1,
        dout => buf_temp_qft_0_2_V_fu_897_p2);

    img_proc_mul_mul_bkb_U83 : component img_proc_mul_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_i_dct_step_fu_200_ap_return_8,
        din1 => buf_temp_qft_2_0_V_fu_904_p1,
        dout => buf_temp_qft_2_0_V_fu_904_p2);

    img_proc_mul_mul_bkb_U84 : component img_proc_mul_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_i_dct_step_fu_200_ap_return_10,
        din1 => buf_temp_qft_2_2_V_fu_911_p1,
        dout => buf_temp_qft_2_2_V_fu_911_p2);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                temp_0_0_reg_918 <= call_ret2_i_dct_step_fu_180_ap_return_0;
                temp_0_1_reg_923 <= call_ret2_i_dct_step_fu_180_ap_return_1;
                temp_0_2_reg_928 <= call_ret2_i_dct_step_fu_180_ap_return_2;
                temp_0_3_reg_933 <= call_ret2_i_dct_step_fu_180_ap_return_3;
                temp_1_0_reg_938 <= call_ret2_i_dct_step_fu_180_ap_return_4;
                temp_1_1_reg_943 <= call_ret2_i_dct_step_fu_180_ap_return_5;
                temp_1_2_reg_948 <= call_ret2_i_dct_step_fu_180_ap_return_6;
                temp_1_3_reg_953 <= call_ret2_i_dct_step_fu_180_ap_return_7;
                temp_2_0_reg_958 <= call_ret2_i_dct_step_fu_180_ap_return_8;
                temp_2_1_reg_963 <= call_ret2_i_dct_step_fu_180_ap_return_9;
                temp_2_2_reg_968 <= call_ret2_i_dct_step_fu_180_ap_return_10;
                temp_2_3_reg_973 <= call_ret2_i_dct_step_fu_180_ap_return_11;
                temp_3_0_reg_978 <= call_ret2_i_dct_step_fu_180_ap_return_12;
                temp_3_1_reg_983 <= call_ret2_i_dct_step_fu_180_ap_return_13;
                temp_3_2_reg_988 <= call_ret2_i_dct_step_fu_180_ap_return_14;
                temp_3_3_reg_993 <= call_ret2_i_dct_step_fu_180_ap_return_15;
                tmp_reg_998 <= tmp_fu_420_p2;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return_0 <= call_ret_write_data_fu_256_ap_return_0;
    ap_return_1 <= call_ret_write_data_fu_256_ap_return_1;
    ap_return_10 <= call_ret_write_data_fu_256_ap_return_10;
    ap_return_11 <= call_ret_write_data_fu_256_ap_return_11;
    ap_return_12 <= call_ret_write_data_fu_256_ap_return_12;
    ap_return_13 <= call_ret_write_data_fu_256_ap_return_13;
    ap_return_14 <= call_ret_write_data_fu_256_ap_return_14;
    ap_return_15 <= call_ret_write_data_fu_256_ap_return_15;
    ap_return_2 <= call_ret_write_data_fu_256_ap_return_2;
    ap_return_3 <= call_ret_write_data_fu_256_ap_return_3;
    ap_return_4 <= call_ret_write_data_fu_256_ap_return_4;
    ap_return_5 <= call_ret_write_data_fu_256_ap_return_5;
    ap_return_6 <= call_ret_write_data_fu_256_ap_return_6;
    ap_return_7 <= call_ret_write_data_fu_256_ap_return_7;
    ap_return_8 <= call_ret_write_data_fu_256_ap_return_8;
    ap_return_9 <= call_ret_write_data_fu_256_ap_return_9;
    buf_temp_qft_0_0_V_fu_890_p1 <= ap_const_lv20_19(6 - 1 downto 0);
    buf_temp_qft_0_2_V_fu_897_p1 <= ap_const_lv20_19(6 - 1 downto 0);
    buf_temp_qft_0_3_V_1_fu_754_p2 <= std_logic_vector(unsigned(buf_temp_qft_0_3_V_fu_545_p2) + unsigned(ap_const_lv20_A));
    buf_temp_qft_0_3_V_fu_545_p2 <= std_logic_vector(unsigned(p_shl3_i_fu_525_p3) + unsigned(p_shl4_i_cast_fu_541_p1));
    buf_temp_qft_1_2_V_1_fu_766_p2 <= std_logic_vector(unsigned(buf_temp_qft_1_2_V_fu_607_p2) + unsigned(ap_const_lv20_A));
    buf_temp_qft_1_2_V_fu_607_p2 <= std_logic_vector(unsigned(p_shl7_i_fu_587_p3) + unsigned(p_shl8_i_cast_fu_603_p1));
    buf_temp_qft_2_0_V_fu_904_p1 <= ap_const_lv20_19(6 - 1 downto 0);
    buf_temp_qft_2_1_V_1_fu_760_p2 <= std_logic_vector(unsigned(buf_temp_qft_2_1_V_fu_646_p2) + unsigned(ap_const_lv20_A));
    buf_temp_qft_2_1_V_fu_646_p2 <= std_logic_vector(unsigned(p_shl9_i_fu_626_p3) + unsigned(p_shl10_i_cast_fu_642_p1));
    buf_temp_qft_2_2_V_fu_911_p1 <= ap_const_lv20_19(6 - 1 downto 0);
    buf_temp_qft_3_0_V_1_fu_772_p2 <= std_logic_vector(unsigned(buf_temp_qft_3_0_V_fu_703_p2) + unsigned(ap_const_lv20_A));
    buf_temp_qft_3_0_V_fu_703_p2 <= std_logic_vector(unsigned(p_shl14_i_fu_683_p3) + unsigned(p_shl15_i_cast_fu_699_p1));
    call_ret5_integer_idct_fu_160_src_0_1_V_read <= std_logic_vector(unsigned(p_shl1_i_fu_494_p3) + unsigned(p_shl2_i_cast_fu_510_p1));
    call_ret5_integer_idct_fu_160_src_0_3_V_read <= 
        buf_temp_qft_0_3_V_1_fu_754_p2 when (tmp_reg_998(0) = '1') else 
        buf_temp_qft_0_3_V_fu_545_p2;
    call_ret5_integer_idct_fu_160_src_1_0_V_read <= std_logic_vector(unsigned(p_shl5_i_fu_551_p3) + unsigned(p_shl6_i_cast_fu_567_p1));
    call_ret5_integer_idct_fu_160_src_1_1_V_read <= (call_ret_i_dct_step_fu_200_ap_return_5 & ap_const_lv4_0);
    call_ret5_integer_idct_fu_160_src_1_2_V_read <= 
        buf_temp_qft_1_2_V_fu_607_p2 when (tmp_reg_998(0) = '1') else 
        buf_temp_qft_1_2_V_1_fu_766_p2;
    call_ret5_integer_idct_fu_160_src_1_3_V_read <= (call_ret_i_dct_step_fu_200_ap_return_7 & ap_const_lv4_0);
    call_ret5_integer_idct_fu_160_src_2_1_V_read <= 
        buf_temp_qft_2_1_V_1_fu_760_p2 when (tmp_reg_998(0) = '1') else 
        buf_temp_qft_2_1_V_fu_646_p2;
    call_ret5_integer_idct_fu_160_src_2_3_V_read <= std_logic_vector(unsigned(p_shl11_i_fu_656_p3) + unsigned(p_shl12_i_cast_fu_672_p1));
    call_ret5_integer_idct_fu_160_src_3_0_V_read <= 
        buf_temp_qft_3_0_V_fu_703_p2 when (tmp_reg_998(0) = '1') else 
        buf_temp_qft_3_0_V_1_fu_772_p2;
    call_ret5_integer_idct_fu_160_src_3_1_V_read <= (call_ret_i_dct_step_fu_200_ap_return_13 & ap_const_lv4_0);
    call_ret5_integer_idct_fu_160_src_3_2_V_read <= std_logic_vector(unsigned(p_shl_i_fu_718_p3) + unsigned(p_shl13_i_cast_fu_734_p1));
    call_ret5_integer_idct_fu_160_src_3_3_V_read <= (call_ret_i_dct_step_fu_200_ap_return_15 & ap_const_lv4_0);
        p_shl10_i_cast_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl10_i_fu_634_p3),20));

    p_shl10_i_fu_634_p3 <= (call_ret_i_dct_step_fu_200_ap_return_9 & ap_const_lv2_0);
    p_shl11_i_fu_656_p3 <= (call_ret_i_dct_step_fu_200_ap_return_11 & ap_const_lv4_0);
        p_shl12_i_cast_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl12_i_fu_664_p3),20));

    p_shl12_i_fu_664_p3 <= (call_ret_i_dct_step_fu_200_ap_return_11 & ap_const_lv2_0);
        p_shl13_i_cast_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl13_i_fu_726_p3),20));

    p_shl13_i_fu_726_p3 <= (call_ret_i_dct_step_fu_200_ap_return_14 & ap_const_lv2_0);
    p_shl14_i_fu_683_p3 <= (call_ret_i_dct_step_fu_200_ap_return_12 & ap_const_lv4_0);
        p_shl15_i_cast_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl15_i_fu_691_p3),20));

    p_shl15_i_fu_691_p3 <= (call_ret_i_dct_step_fu_200_ap_return_12 & ap_const_lv2_0);
    p_shl1_i_fu_494_p3 <= (call_ret_i_dct_step_fu_200_ap_return_1 & ap_const_lv4_0);
        p_shl2_i_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl2_i_fu_502_p3),20));

    p_shl2_i_fu_502_p3 <= (call_ret_i_dct_step_fu_200_ap_return_1 & ap_const_lv2_0);
    p_shl3_i_fu_525_p3 <= (call_ret_i_dct_step_fu_200_ap_return_3 & ap_const_lv4_0);
        p_shl4_i_cast_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_i_fu_533_p3),20));

    p_shl4_i_fu_533_p3 <= (call_ret_i_dct_step_fu_200_ap_return_3 & ap_const_lv2_0);
    p_shl5_i_fu_551_p3 <= (call_ret_i_dct_step_fu_200_ap_return_4 & ap_const_lv4_0);
        p_shl6_i_cast_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl6_i_fu_559_p3),20));

    p_shl6_i_fu_559_p3 <= (call_ret_i_dct_step_fu_200_ap_return_4 & ap_const_lv2_0);
    p_shl7_i_fu_587_p3 <= (call_ret_i_dct_step_fu_200_ap_return_6 & ap_const_lv4_0);
        p_shl8_i_cast_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl8_i_fu_595_p3),20));

    p_shl8_i_fu_595_p3 <= (call_ret_i_dct_step_fu_200_ap_return_6 & ap_const_lv2_0);
    p_shl9_i_fu_626_p3 <= (call_ret_i_dct_step_fu_200_ap_return_9 & ap_const_lv4_0);
    p_shl_i_fu_718_p3 <= (call_ret_i_dct_step_fu_200_ap_return_14 & ap_const_lv4_0);
    tmp_fu_420_p2 <= "1" when (mark = ap_const_lv8_0) else "0";
end behav;
