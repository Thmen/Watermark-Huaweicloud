// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dct_step_HH_
#define _dct_step_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dct_step : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > src_address0;
    sc_out< sc_logic > src_ce0;
    sc_in< sc_lv<16> > src_q0;
    sc_out< sc_lv<4> > src_address1;
    sc_out< sc_logic > src_ce1;
    sc_in< sc_lv<16> > src_q1;
    sc_out< sc_lv<4> > dst_address0;
    sc_out< sc_logic > dst_ce0;
    sc_out< sc_logic > dst_we0;
    sc_out< sc_lv<16> > dst_d0;
    sc_out< sc_lv<4> > dst_address1;
    sc_out< sc_logic > dst_ce1;
    sc_out< sc_logic > dst_we1;
    sc_out< sc_lv<16> > dst_d1;


    // Module declarations
    dct_step(sc_module_name name);
    SC_HAS_PROCESS(dct_step);

    ~dct_step();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > reg_350;
    sc_signal< sc_lv<16> > grp_fu_379_p2;
    sc_signal< sc_lv<16> > reg_385;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > tmp_82_fu_445_p2;
    sc_signal< sc_lv<16> > tmp_82_reg_664;
    sc_signal< sc_lv<16> > tmp_85_fu_506_p2;
    sc_signal< sc_lv<16> > tmp_85_reg_689;
    sc_signal< sc_lv<16> > tmp_90_fu_567_p2;
    sc_signal< sc_lv<16> > tmp_90_reg_714;
    sc_signal< sc_lv<16> > tmp_95_fu_628_p2;
    sc_signal< sc_lv<16> > tmp_95_reg_729;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > grp_fu_360_p2;
    sc_signal< sc_lv<16> > tmp_58_fu_414_p2;
    sc_signal< sc_lv<16> > tmp_61_fu_475_p2;
    sc_signal< sc_lv<16> > tmp_64_fu_536_p2;
    sc_signal< sc_lv<16> > tmp_67_fu_597_p2;
    sc_signal< sc_lv<16> > grp_fu_340_p2;
    sc_signal< sc_lv<16> > grp_fu_354_p2;
    sc_signal< sc_lv<16> > grp_fu_367_p2;
    sc_signal< sc_lv<16> > grp_fu_373_p2;
    sc_signal< sc_lv<16> > tmp_fu_390_p2;
    sc_signal< sc_lv<16> > tmp_56_fu_402_p2;
    sc_signal< sc_lv<16> > tmp_57_fu_408_p2;
    sc_signal< sc_lv<16> > tmp_88_fu_396_p2;
    sc_signal< sc_lv<16> > tmp_104_fu_421_p2;
    sc_signal< sc_lv<16> > tmp_80_fu_433_p2;
    sc_signal< sc_lv<16> > tmp_108_fu_427_p2;
    sc_signal< sc_lv<16> > tmp_81_fu_439_p2;
    sc_signal< sc_lv<16> > tmp_89_fu_451_p2;
    sc_signal< sc_lv<16> > tmp_59_fu_463_p2;
    sc_signal< sc_lv<16> > tmp_60_fu_469_p2;
    sc_signal< sc_lv<16> > tmp_93_fu_457_p2;
    sc_signal< sc_lv<16> > tmp_109_fu_482_p2;
    sc_signal< sc_lv<16> > tmp_83_fu_494_p2;
    sc_signal< sc_lv<16> > tmp_110_fu_488_p2;
    sc_signal< sc_lv<16> > tmp_84_fu_500_p2;
    sc_signal< sc_lv<16> > tmp_94_fu_512_p2;
    sc_signal< sc_lv<16> > tmp_62_fu_524_p2;
    sc_signal< sc_lv<16> > tmp_63_fu_530_p2;
    sc_signal< sc_lv<16> > tmp_98_fu_518_p2;
    sc_signal< sc_lv<16> > tmp_111_fu_543_p2;
    sc_signal< sc_lv<16> > tmp_86_fu_555_p2;
    sc_signal< sc_lv<16> > tmp_112_fu_549_p2;
    sc_signal< sc_lv<16> > tmp_87_fu_561_p2;
    sc_signal< sc_lv<16> > tmp_99_fu_573_p2;
    sc_signal< sc_lv<16> > tmp_65_fu_585_p2;
    sc_signal< sc_lv<16> > tmp_66_fu_591_p2;
    sc_signal< sc_lv<16> > tmp_103_fu_579_p2;
    sc_signal< sc_lv<16> > tmp_113_fu_604_p2;
    sc_signal< sc_lv<16> > tmp_91_fu_616_p2;
    sc_signal< sc_lv<16> > tmp_114_fu_610_p2;
    sc_signal< sc_lv<16> > tmp_92_fu_622_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<16> ap_const_lv16_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dst_address0();
    void thread_dst_address1();
    void thread_dst_ce0();
    void thread_dst_ce1();
    void thread_dst_d0();
    void thread_dst_d1();
    void thread_dst_we0();
    void thread_dst_we1();
    void thread_grp_fu_340_p2();
    void thread_grp_fu_354_p2();
    void thread_grp_fu_360_p2();
    void thread_grp_fu_367_p2();
    void thread_grp_fu_373_p2();
    void thread_grp_fu_379_p2();
    void thread_src_address0();
    void thread_src_address1();
    void thread_src_ce0();
    void thread_src_ce1();
    void thread_tmp_103_fu_579_p2();
    void thread_tmp_104_fu_421_p2();
    void thread_tmp_108_fu_427_p2();
    void thread_tmp_109_fu_482_p2();
    void thread_tmp_110_fu_488_p2();
    void thread_tmp_111_fu_543_p2();
    void thread_tmp_112_fu_549_p2();
    void thread_tmp_113_fu_604_p2();
    void thread_tmp_114_fu_610_p2();
    void thread_tmp_56_fu_402_p2();
    void thread_tmp_57_fu_408_p2();
    void thread_tmp_58_fu_414_p2();
    void thread_tmp_59_fu_463_p2();
    void thread_tmp_60_fu_469_p2();
    void thread_tmp_61_fu_475_p2();
    void thread_tmp_62_fu_524_p2();
    void thread_tmp_63_fu_530_p2();
    void thread_tmp_64_fu_536_p2();
    void thread_tmp_65_fu_585_p2();
    void thread_tmp_66_fu_591_p2();
    void thread_tmp_67_fu_597_p2();
    void thread_tmp_80_fu_433_p2();
    void thread_tmp_81_fu_439_p2();
    void thread_tmp_82_fu_445_p2();
    void thread_tmp_83_fu_494_p2();
    void thread_tmp_84_fu_500_p2();
    void thread_tmp_85_fu_506_p2();
    void thread_tmp_86_fu_555_p2();
    void thread_tmp_87_fu_561_p2();
    void thread_tmp_88_fu_396_p2();
    void thread_tmp_89_fu_451_p2();
    void thread_tmp_90_fu_567_p2();
    void thread_tmp_91_fu_616_p2();
    void thread_tmp_92_fu_622_p2();
    void thread_tmp_93_fu_457_p2();
    void thread_tmp_94_fu_512_p2();
    void thread_tmp_95_fu_628_p2();
    void thread_tmp_98_fu_518_p2();
    void thread_tmp_99_fu_573_p2();
    void thread_tmp_fu_390_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
