// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _quantificat_HH_
#define _quantificat_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "img_proc_mux_42_6bkb.h"
#include "img_proc_mux_42_2cud.h"
#include "img_proc_mul_mul_dEe.h"

namespace ap_rtl {

struct quantificat : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > qsrc_address0;
    sc_out< sc_logic > qsrc_ce0;
    sc_in< sc_lv<16> > qsrc_q0;
    sc_out< sc_lv<4> > qsrc_address1;
    sc_out< sc_logic > qsrc_ce1;
    sc_in< sc_lv<16> > qsrc_q1;
    sc_out< sc_lv<20> > ap_return_0;
    sc_out< sc_lv<20> > ap_return_1;
    sc_out< sc_lv<20> > ap_return_2;
    sc_out< sc_lv<20> > ap_return_3;
    sc_out< sc_lv<20> > ap_return_4;
    sc_out< sc_lv<20> > ap_return_5;
    sc_out< sc_lv<20> > ap_return_6;
    sc_out< sc_lv<20> > ap_return_7;
    sc_out< sc_lv<20> > ap_return_8;
    sc_out< sc_lv<20> > ap_return_9;
    sc_out< sc_lv<20> > ap_return_10;
    sc_out< sc_lv<20> > ap_return_11;
    sc_out< sc_lv<20> > ap_return_12;
    sc_out< sc_lv<20> > ap_return_13;
    sc_out< sc_lv<20> > ap_return_14;
    sc_out< sc_lv<20> > ap_return_15;
    sc_signal< sc_lv<6> > ap_var_for_const0;
    sc_signal< sc_lv<6> > ap_var_for_const1;
    sc_signal< sc_lv<6> > ap_var_for_const2;


    // Module declarations
    quantificat(sc_module_name name);
    SC_HAS_PROCESS(quantificat);

    ~quantificat();

    sc_trace_file* mVcdFile;

    img_proc_mux_42_6bkb<1,1,6,6,6,6,2,6>* img_proc_mux_42_6bkb_U3;
    img_proc_mux_42_6bkb<1,1,6,6,6,6,2,6>* img_proc_mux_42_6bkb_U4;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U5;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U6;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U7;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U8;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U9;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U10;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U11;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U12;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U13;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U14;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U15;
    img_proc_mux_42_2cud<1,1,20,20,20,20,2,20>* img_proc_mux_42_2cud_U16;
    img_proc_mul_mul_dEe<1,1,6,16,20>* img_proc_mul_mul_dEe_U17;
    img_proc_mul_mul_dEe<1,1,6,16,20>* img_proc_mul_mul_dEe_U18;
    img_proc_mul_mul_dEe<1,1,6,16,20>* img_proc_mul_mul_dEe_U19;
    img_proc_mul_mul_dEe<1,1,6,16,20>* img_proc_mul_mul_dEe_U20;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<20> > qdst_1_1_V_write_a_reg_103;
    sc_signal< sc_lv<20> > qdst_1_0_V_write_a_reg_115;
    sc_signal< sc_lv<20> > qdst_1_2_V_write_a_reg_127;
    sc_signal< sc_lv<20> > qdst_1_3_V_write_a_reg_139;
    sc_signal< sc_lv<20> > qdst_0_3_V_write_a_reg_151;
    sc_signal< sc_lv<20> > qdst_2_0_V_write_a_reg_163;
    sc_signal< sc_lv<20> > qdst_2_1_V_write_a_reg_175;
    sc_signal< sc_lv<20> > qdst_0_2_V_write_a_reg_187;
    sc_signal< sc_lv<20> > qdst_2_2_V_write_a_reg_199;
    sc_signal< sc_lv<20> > qdst_2_3_V_write_a_reg_211;
    sc_signal< sc_lv<20> > qdst_0_1_V_write_a_reg_223;
    sc_signal< sc_lv<20> > qdst_3_0_V_write_a_reg_235;
    sc_signal< sc_lv<20> > qdst_3_1_V_write_a_reg_247;
    sc_signal< sc_lv<20> > qdst_0_0_V_write_a_reg_259;
    sc_signal< sc_lv<20> > qdst_3_2_V_write_a_reg_271;
    sc_signal< sc_lv<20> > qdst_3_3_V_write_a_reg_283;
    sc_signal< sc_lv<3> > r_reg_295;
    sc_signal< sc_lv<1> > exitcond1_fu_306_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_779;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > r_1_fu_312_p2;
    sc_signal< sc_lv<3> > r_1_reg_783;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > tmp_fu_318_p3;
    sc_signal< sc_lv<5> > tmp_reg_788;
    sc_signal< sc_lv<2> > tmp_12_fu_346_p1;
    sc_signal< sc_lv<2> > tmp_12_reg_804;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<20> > tmp_s_fu_395_p1;
    sc_signal< sc_lv<20> > tmp_s_reg_835;
    sc_signal< sc_lv<20> > newSel1_fu_427_p3;
    sc_signal< sc_lv<20> > newSel1_reg_840;
    sc_signal< sc_lv<20> > newSel3_fu_442_p3;
    sc_signal< sc_lv<20> > newSel3_reg_845;
    sc_signal< sc_lv<20> > qdst_V_016_1_fu_457_p3;
    sc_signal< sc_lv<20> > qdst_V_016_1_reg_850;
    sc_signal< sc_lv<20> > qdst_V_0_1_fu_465_p3;
    sc_signal< sc_lv<20> > qdst_V_0_1_reg_855;
    sc_signal< sc_lv<20> > tmp_4_1_fu_489_p1;
    sc_signal< sc_lv<20> > tmp_4_1_reg_860;
    sc_signal< sc_lv<20> > qdst_V_16_1_fu_493_p6;
    sc_signal< sc_lv<20> > qdst_V_16_1_reg_865;
    sc_signal< sc_lv<20> > qdst_V_15_1_fu_505_p6;
    sc_signal< sc_lv<20> > qdst_V_15_1_reg_870;
    sc_signal< sc_lv<20> > qdst_V_1_1_fu_517_p6;
    sc_signal< sc_lv<20> > qdst_V_1_1_reg_875;
    sc_signal< sc_lv<20> > qdst_V_14_1_fu_529_p6;
    sc_signal< sc_lv<20> > qdst_V_14_1_reg_880;
    sc_signal< sc_lv<20> > qdst_V_29_1_fu_545_p6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<20> > qdst_V_28_1_fu_557_p6;
    sc_signal< sc_lv<20> > qdst_V_27_1_fu_569_p6;
    sc_signal< sc_lv<20> > qdst_V_2_1_fu_581_p6;
    sc_signal< sc_lv<20> > qdst_V_312_1_fu_597_p6;
    sc_signal< sc_lv<20> > qdst_V_311_1_fu_609_p6;
    sc_signal< sc_lv<20> > qdst_V_310_1_fu_621_p6;
    sc_signal< sc_lv<20> > qdst_V_3_1_fu_633_p6;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_r_phi_fu_299_p4;
    sc_signal< sc_lv<64> > tmp_5_fu_326_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_337_p3;
    sc_signal< sc_lv<64> > tmp_9_fu_355_p3;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_11_fu_369_p3;
    sc_signal< sc_lv<5> > tmp_6_fu_331_p2;
    sc_signal< sc_lv<5> > tmp_8_fu_350_p2;
    sc_signal< sc_lv<5> > tmp_10_fu_364_p2;
    sc_signal< sc_lv<6> > tmp_1_fu_378_p6;
    sc_signal< sc_lv<1> > sel_tmp4_fu_409_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_404_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_399_p2;
    sc_signal< sc_lv<20> > qdst_V_s_fu_741_p2;
    sc_signal< sc_lv<1> > or_cond_fu_414_p2;
    sc_signal< sc_lv<20> > newSel_fu_420_p3;
    sc_signal< sc_lv<20> > newSel2_fu_435_p3;
    sc_signal< sc_lv<20> > sel_tmp1_fu_450_p3;
    sc_signal< sc_lv<6> > tmp_2_fu_472_p6;
    sc_signal< sc_lv<20> > qdst_V_1_fu_751_p2;
    sc_signal< sc_lv<20> > qdst_V_2_fu_761_p2;
    sc_signal< sc_lv<20> > qdst_V_3_fu_770_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > qdst_V_s_fu_741_p0;
    sc_signal< sc_lv<6> > qdst_V_1_fu_751_p0;
    sc_signal< sc_lv<6> > qdst_V_2_fu_761_p0;
    sc_signal< sc_lv<6> > qdst_V_3_fu_770_p0;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<20> > qdst_V_1_fu_751_p00;
    sc_signal< sc_lv<20> > qdst_V_s_fu_741_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<6> ap_const_lv6_14;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_r_phi_fu_299_p4();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_exitcond1_fu_306_p2();
    void thread_newSel1_fu_427_p3();
    void thread_newSel2_fu_435_p3();
    void thread_newSel3_fu_442_p3();
    void thread_newSel_fu_420_p3();
    void thread_or_cond_fu_414_p2();
    void thread_qdst_V_016_1_fu_457_p3();
    void thread_qdst_V_0_1_fu_465_p3();
    void thread_qdst_V_1_fu_751_p0();
    void thread_qdst_V_1_fu_751_p00();
    void thread_qdst_V_2_fu_761_p0();
    void thread_qdst_V_3_fu_770_p0();
    void thread_qdst_V_s_fu_741_p0();
    void thread_qdst_V_s_fu_741_p00();
    void thread_qsrc_address0();
    void thread_qsrc_address1();
    void thread_qsrc_ce0();
    void thread_qsrc_ce1();
    void thread_r_1_fu_312_p2();
    void thread_sel_tmp1_fu_450_p3();
    void thread_sel_tmp2_fu_404_p2();
    void thread_sel_tmp4_fu_409_p2();
    void thread_sel_tmp_fu_399_p2();
    void thread_tmp_10_fu_364_p2();
    void thread_tmp_11_fu_369_p3();
    void thread_tmp_12_fu_346_p1();
    void thread_tmp_4_1_fu_489_p1();
    void thread_tmp_5_fu_326_p1();
    void thread_tmp_6_fu_331_p2();
    void thread_tmp_7_fu_337_p3();
    void thread_tmp_8_fu_350_p2();
    void thread_tmp_9_fu_355_p3();
    void thread_tmp_fu_318_p3();
    void thread_tmp_s_fu_395_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
