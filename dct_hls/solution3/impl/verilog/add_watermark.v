// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module add_watermark (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indata_address0,
        indata_ce0,
        indata_q0,
        mark,
        outdata_address0,
        outdata_ce0,
        outdata_we0,
        outdata_d0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] indata_address0;
output   indata_ce0;
input  [7:0] indata_q0;
input  [7:0] mark;
output  [3:0] outdata_address0;
output   outdata_ce0;
output   outdata_we0;
output  [7:0] outdata_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg indata_ce0;
reg outdata_ce0;
reg outdata_we0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] r_fu_203_p2;
reg   [2:0] r_reg_497;
wire    ap_CS_fsm_state2;
wire   [3:0] tmp_i_fu_213_p3;
reg   [3:0] tmp_i_reg_502;
wire   [0:0] exitcond1_i_fu_197_p2;
wire   [5:0] tmp_125_cast_fu_229_p1;
reg   [5:0] tmp_125_cast_reg_507;
wire   [0:0] tmp_fu_233_p2;
reg   [0:0] tmp_reg_512;
wire   [2:0] c_fu_248_p2;
reg   [2:0] c_reg_523;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond_i_fu_242_p2;
wire   [5:0] tmp_97_fu_268_p2;
reg   [5:0] tmp_97_reg_533;
reg   [19:0] buf_temp_qft_0_0_V_reg_538;
wire    ap_CS_fsm_state9;
wire    grp_quantificat_fu_186_ap_done;
reg   [19:0] buf_temp_qft_0_1_V_reg_543;
reg   [19:0] buf_temp_qft_0_2_V_reg_548;
reg   [19:0] buf_temp_qft_1_0_V_reg_553;
reg   [19:0] buf_temp_qft_1_1_V_reg_558;
reg   [19:0] buf_temp_qft_1_3_V_reg_563;
reg   [19:0] buf_temp_qft_2_0_V_reg_568;
reg   [19:0] buf_temp_qft_2_2_V_reg_573;
reg   [19:0] buf_temp_qft_2_3_V_reg_578;
reg   [19:0] buf_temp_qft_3_1_V_reg_583;
reg   [19:0] buf_temp_qft_3_2_V_reg_588;
reg   [19:0] buf_temp_qft_3_3_V_reg_593;
wire   [19:0] buf_temp_qft_3_0_V_2_fu_382_p3;
reg   [19:0] buf_temp_qft_3_0_V_2_reg_598;
wire   [19:0] buf_temp_qft_2_1_V_2_fu_390_p3;
reg   [19:0] buf_temp_qft_2_1_V_2_reg_603;
wire   [19:0] buf_temp_qft_1_2_V_2_fu_398_p3;
reg   [19:0] buf_temp_qft_1_2_V_2_reg_608;
wire   [19:0] buf_temp_qft_0_3_V_2_fu_406_p3;
reg   [19:0] buf_temp_qft_0_3_V_2_reg_613;
wire   [2:0] r_2_fu_420_p2;
reg   [2:0] r_2_reg_621;
wire    ap_CS_fsm_state11;
wire   [5:0] tmp_127_cast_fu_434_p1;
reg   [5:0] tmp_127_cast_reg_626;
wire   [0:0] exitcond1_i1_fu_414_p2;
wire   [3:0] tmp_1_i1_fu_442_p3;
reg   [3:0] tmp_1_i1_reg_631;
wire   [2:0] c_1_fu_460_p2;
reg   [2:0] c_1_reg_639;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond_i1_fu_454_p2;
wire   [3:0] tmp_4_i_fu_480_p2;
reg   [3:0] tmp_4_i_reg_649;
reg   [3:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
wire   [15:0] temp_q0;
reg   [3:0] temp_address1;
reg    temp_ce1;
reg    temp_we1;
wire   [15:0] temp_q1;
reg   [3:0] buf_2d_in_address0;
reg    buf_2d_in_ce0;
reg    buf_2d_in_we0;
wire   [15:0] buf_2d_in_d0;
wire   [15:0] buf_2d_in_q0;
reg    buf_2d_in_ce1;
wire   [15:0] buf_2d_in_q1;
reg   [3:0] buf_temp_dct_address0;
reg    buf_temp_dct_ce0;
reg    buf_temp_dct_we0;
wire   [15:0] buf_temp_dct_q0;
reg   [3:0] buf_temp_dct_address1;
reg    buf_temp_dct_ce1;
reg    buf_temp_dct_we1;
wire   [15:0] buf_temp_dct_q1;
reg   [3:0] buf_2d_out_address0;
reg    buf_2d_out_ce0;
reg    buf_2d_out_we0;
wire   [7:0] buf_2d_out_q0;
reg    buf_2d_out_ce1;
reg    buf_2d_out_we1;
wire    grp_integer_idct_fu_165_ap_start;
wire    grp_integer_idct_fu_165_ap_done;
wire    grp_integer_idct_fu_165_ap_idle;
wire    grp_integer_idct_fu_165_ap_ready;
wire   [3:0] grp_integer_idct_fu_165_out_r_address0;
wire    grp_integer_idct_fu_165_out_r_ce0;
wire    grp_integer_idct_fu_165_out_r_we0;
wire   [7:0] grp_integer_idct_fu_165_out_r_d0;
wire   [3:0] grp_integer_idct_fu_165_out_r_address1;
wire    grp_integer_idct_fu_165_out_r_ce1;
wire    grp_integer_idct_fu_165_out_r_we1;
wire   [7:0] grp_integer_idct_fu_165_out_r_d1;
wire    grp_quantificat_fu_186_ap_start;
wire    grp_quantificat_fu_186_ap_idle;
wire    grp_quantificat_fu_186_ap_ready;
wire   [3:0] grp_quantificat_fu_186_qsrc_address0;
wire    grp_quantificat_fu_186_qsrc_ce0;
wire   [3:0] grp_quantificat_fu_186_qsrc_address1;
wire    grp_quantificat_fu_186_qsrc_ce1;
wire   [19:0] grp_quantificat_fu_186_ap_return_0;
wire   [19:0] grp_quantificat_fu_186_ap_return_1;
wire   [19:0] grp_quantificat_fu_186_ap_return_2;
wire   [19:0] grp_quantificat_fu_186_ap_return_3;
wire   [19:0] grp_quantificat_fu_186_ap_return_4;
wire   [19:0] grp_quantificat_fu_186_ap_return_5;
wire   [19:0] grp_quantificat_fu_186_ap_return_6;
wire   [19:0] grp_quantificat_fu_186_ap_return_7;
wire   [19:0] grp_quantificat_fu_186_ap_return_8;
wire   [19:0] grp_quantificat_fu_186_ap_return_9;
wire   [19:0] grp_quantificat_fu_186_ap_return_10;
wire   [19:0] grp_quantificat_fu_186_ap_return_11;
wire   [19:0] grp_quantificat_fu_186_ap_return_12;
wire   [19:0] grp_quantificat_fu_186_ap_return_13;
wire   [19:0] grp_quantificat_fu_186_ap_return_14;
wire   [19:0] grp_quantificat_fu_186_ap_return_15;
wire    grp_dct_step_fu_191_ap_start;
wire    grp_dct_step_fu_191_ap_done;
wire    grp_dct_step_fu_191_ap_idle;
wire    grp_dct_step_fu_191_ap_ready;
wire   [3:0] grp_dct_step_fu_191_src_address0;
wire    grp_dct_step_fu_191_src_ce0;
reg   [15:0] grp_dct_step_fu_191_src_q0;
wire   [3:0] grp_dct_step_fu_191_src_address1;
wire    grp_dct_step_fu_191_src_ce1;
reg   [15:0] grp_dct_step_fu_191_src_q1;
wire   [3:0] grp_dct_step_fu_191_dst_address0;
wire    grp_dct_step_fu_191_dst_ce0;
wire    grp_dct_step_fu_191_dst_we0;
wire   [15:0] grp_dct_step_fu_191_dst_d0;
wire   [3:0] grp_dct_step_fu_191_dst_address1;
wire    grp_dct_step_fu_191_dst_ce1;
wire    grp_dct_step_fu_191_dst_we1;
wire   [15:0] grp_dct_step_fu_191_dst_d1;
reg   [2:0] r_i_reg_121;
reg   [2:0] c_i_reg_132;
wire    ap_CS_fsm_state4;
reg   [2:0] r_i1_reg_143;
wire    ap_CS_fsm_state10;
reg   [2:0] c_i1_reg_154;
wire    ap_CS_fsm_state13;
reg    ap_reg_grp_integer_idct_fu_165_ap_start;
reg    ap_reg_grp_quantificat_fu_186_ap_start;
wire    ap_CS_fsm_state8;
reg    ap_reg_grp_dct_step_fu_191_ap_start;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_i_9_fu_259_p1;
wire   [63:0] tmp_129_cast_fu_278_p1;
wire   [63:0] tmp_130_cast_fu_475_p1;
wire   [63:0] tmp_5_i_fu_485_p1;
wire   [1:0] tmp_115_fu_209_p1;
wire   [4:0] tmp_s_fu_221_p3;
wire   [3:0] c_i_cast_fu_238_p1;
wire   [3:0] tmp_9_i_fu_254_p2;
wire   [5:0] tmp_2_i_cast_fu_264_p1;
wire   [19:0] buf_temp_qft_3_0_V_1_fu_358_p2;
wire   [19:0] buf_temp_qft_2_1_V_1_fu_370_p2;
wire   [19:0] buf_temp_qft_1_2_V_1_fu_364_p2;
wire   [19:0] buf_temp_qft_0_3_V_1_fu_376_p2;
wire   [4:0] tmp_96_fu_426_p3;
wire   [1:0] tmp_116_fu_438_p1;
wire   [5:0] tmp_3_i1_cast_fu_466_p1;
wire   [5:0] tmp_98_fu_470_p2;
wire   [3:0] c_i1_cast_fu_450_p1;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_reg_grp_integer_idct_fu_165_ap_start = 1'b0;
#0 ap_reg_grp_quantificat_fu_186_ap_start = 1'b0;
#0 ap_reg_grp_dct_step_fu_191_ap_start = 1'b0;
end

add_watermark_temp #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(grp_dct_step_fu_191_dst_d0),
    .q0(temp_q0),
    .address1(temp_address1),
    .ce1(temp_ce1),
    .we1(temp_we1),
    .d1(grp_dct_step_fu_191_dst_d1),
    .q1(temp_q1)
);

add_watermark_bufeOg #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
buf_2d_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2d_in_address0),
    .ce0(buf_2d_in_ce0),
    .we0(buf_2d_in_we0),
    .d0(buf_2d_in_d0),
    .q0(buf_2d_in_q0),
    .address1(grp_dct_step_fu_191_src_address1),
    .ce1(buf_2d_in_ce1),
    .q1(buf_2d_in_q1)
);

add_watermark_temp #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
buf_temp_dct_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_temp_dct_address0),
    .ce0(buf_temp_dct_ce0),
    .we0(buf_temp_dct_we0),
    .d0(grp_dct_step_fu_191_dst_d0),
    .q0(buf_temp_dct_q0),
    .address1(buf_temp_dct_address1),
    .ce1(buf_temp_dct_ce1),
    .we1(buf_temp_dct_we1),
    .d1(grp_dct_step_fu_191_dst_d1),
    .q1(buf_temp_dct_q1)
);

add_watermark_bufg8j #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
buf_2d_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2d_out_address0),
    .ce0(buf_2d_out_ce0),
    .we0(buf_2d_out_we0),
    .d0(grp_integer_idct_fu_165_out_r_d0),
    .q0(buf_2d_out_q0),
    .address1(grp_integer_idct_fu_165_out_r_address1),
    .ce1(buf_2d_out_ce1),
    .we1(buf_2d_out_we1),
    .d1(grp_integer_idct_fu_165_out_r_d1)
);

integer_idct grp_integer_idct_fu_165(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_integer_idct_fu_165_ap_start),
    .ap_done(grp_integer_idct_fu_165_ap_done),
    .ap_idle(grp_integer_idct_fu_165_ap_idle),
    .ap_ready(grp_integer_idct_fu_165_ap_ready),
    .src_0_0_V_read(buf_temp_qft_0_0_V_reg_538),
    .src_0_1_V_read(buf_temp_qft_0_1_V_reg_543),
    .src_0_2_V_read(buf_temp_qft_0_2_V_reg_548),
    .src_0_3_V_read(buf_temp_qft_0_3_V_2_reg_613),
    .src_1_0_V_read(buf_temp_qft_1_0_V_reg_553),
    .src_1_1_V_read(buf_temp_qft_1_1_V_reg_558),
    .src_1_2_V_read(buf_temp_qft_1_2_V_2_reg_608),
    .src_1_3_V_read(buf_temp_qft_1_3_V_reg_563),
    .src_2_0_V_read(buf_temp_qft_2_0_V_reg_568),
    .src_2_1_V_read(buf_temp_qft_2_1_V_2_reg_603),
    .src_2_2_V_read(buf_temp_qft_2_2_V_reg_573),
    .src_2_3_V_read(buf_temp_qft_2_3_V_reg_578),
    .src_3_0_V_read(buf_temp_qft_3_0_V_2_reg_598),
    .src_3_1_V_read(buf_temp_qft_3_1_V_reg_583),
    .src_3_2_V_read(buf_temp_qft_3_2_V_reg_588),
    .src_3_3_V_read(buf_temp_qft_3_3_V_reg_593),
    .out_r_address0(grp_integer_idct_fu_165_out_r_address0),
    .out_r_ce0(grp_integer_idct_fu_165_out_r_ce0),
    .out_r_we0(grp_integer_idct_fu_165_out_r_we0),
    .out_r_d0(grp_integer_idct_fu_165_out_r_d0),
    .out_r_address1(grp_integer_idct_fu_165_out_r_address1),
    .out_r_ce1(grp_integer_idct_fu_165_out_r_ce1),
    .out_r_we1(grp_integer_idct_fu_165_out_r_we1),
    .out_r_d1(grp_integer_idct_fu_165_out_r_d1)
);

quantificat grp_quantificat_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantificat_fu_186_ap_start),
    .ap_done(grp_quantificat_fu_186_ap_done),
    .ap_idle(grp_quantificat_fu_186_ap_idle),
    .ap_ready(grp_quantificat_fu_186_ap_ready),
    .qsrc_address0(grp_quantificat_fu_186_qsrc_address0),
    .qsrc_ce0(grp_quantificat_fu_186_qsrc_ce0),
    .qsrc_q0(buf_temp_dct_q0),
    .qsrc_address1(grp_quantificat_fu_186_qsrc_address1),
    .qsrc_ce1(grp_quantificat_fu_186_qsrc_ce1),
    .qsrc_q1(buf_temp_dct_q1),
    .ap_return_0(grp_quantificat_fu_186_ap_return_0),
    .ap_return_1(grp_quantificat_fu_186_ap_return_1),
    .ap_return_2(grp_quantificat_fu_186_ap_return_2),
    .ap_return_3(grp_quantificat_fu_186_ap_return_3),
    .ap_return_4(grp_quantificat_fu_186_ap_return_4),
    .ap_return_5(grp_quantificat_fu_186_ap_return_5),
    .ap_return_6(grp_quantificat_fu_186_ap_return_6),
    .ap_return_7(grp_quantificat_fu_186_ap_return_7),
    .ap_return_8(grp_quantificat_fu_186_ap_return_8),
    .ap_return_9(grp_quantificat_fu_186_ap_return_9),
    .ap_return_10(grp_quantificat_fu_186_ap_return_10),
    .ap_return_11(grp_quantificat_fu_186_ap_return_11),
    .ap_return_12(grp_quantificat_fu_186_ap_return_12),
    .ap_return_13(grp_quantificat_fu_186_ap_return_13),
    .ap_return_14(grp_quantificat_fu_186_ap_return_14),
    .ap_return_15(grp_quantificat_fu_186_ap_return_15)
);

dct_step grp_dct_step_fu_191(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dct_step_fu_191_ap_start),
    .ap_done(grp_dct_step_fu_191_ap_done),
    .ap_idle(grp_dct_step_fu_191_ap_idle),
    .ap_ready(grp_dct_step_fu_191_ap_ready),
    .src_address0(grp_dct_step_fu_191_src_address0),
    .src_ce0(grp_dct_step_fu_191_src_ce0),
    .src_q0(grp_dct_step_fu_191_src_q0),
    .src_address1(grp_dct_step_fu_191_src_address1),
    .src_ce1(grp_dct_step_fu_191_src_ce1),
    .src_q1(grp_dct_step_fu_191_src_q1),
    .dst_address0(grp_dct_step_fu_191_dst_address0),
    .dst_ce0(grp_dct_step_fu_191_dst_ce0),
    .dst_we0(grp_dct_step_fu_191_dst_we0),
    .dst_d0(grp_dct_step_fu_191_dst_d0),
    .dst_address1(grp_dct_step_fu_191_dst_address1),
    .dst_ce1(grp_dct_step_fu_191_dst_ce1),
    .dst_we1(grp_dct_step_fu_191_dst_we1),
    .dst_d1(grp_dct_step_fu_191_dst_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dct_step_fu_191_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) | ((exitcond1_i_fu_197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_reg_grp_dct_step_fu_191_ap_start <= 1'b1;
        end else if ((grp_dct_step_fu_191_ap_ready == 1'b1)) begin
            ap_reg_grp_dct_step_fu_191_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_integer_idct_fu_165_ap_start <= 1'b0;
    end else begin
        if (((grp_quantificat_fu_186_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_reg_grp_integer_idct_fu_165_ap_start <= 1'b1;
        end else if ((grp_integer_idct_fu_165_ap_ready == 1'b1)) begin
            ap_reg_grp_integer_idct_fu_165_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_quantificat_fu_186_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_reg_grp_quantificat_fu_186_ap_start <= 1'b1;
        end else if ((grp_quantificat_fu_186_ap_ready == 1'b1)) begin
            ap_reg_grp_quantificat_fu_186_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        c_i1_reg_154 <= c_1_reg_639;
    end else if (((exitcond1_i1_fu_414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        c_i1_reg_154 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c_i_reg_132 <= c_reg_523;
    end else if (((exitcond1_i_fu_197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c_i_reg_132 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        r_i1_reg_143 <= r_2_reg_621;
    end else if (((grp_integer_idct_fu_165_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        r_i1_reg_143 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_i_reg_121 <= r_reg_497;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_i_reg_121 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_quantificat_fu_186_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        buf_temp_qft_0_0_V_reg_538 <= grp_quantificat_fu_186_ap_return_0;
        buf_temp_qft_0_1_V_reg_543 <= grp_quantificat_fu_186_ap_return_1;
        buf_temp_qft_0_2_V_reg_548 <= grp_quantificat_fu_186_ap_return_2;
        buf_temp_qft_0_3_V_2_reg_613 <= buf_temp_qft_0_3_V_2_fu_406_p3;
        buf_temp_qft_1_0_V_reg_553 <= grp_quantificat_fu_186_ap_return_4;
        buf_temp_qft_1_1_V_reg_558 <= grp_quantificat_fu_186_ap_return_5;
        buf_temp_qft_1_2_V_2_reg_608 <= buf_temp_qft_1_2_V_2_fu_398_p3;
        buf_temp_qft_1_3_V_reg_563 <= grp_quantificat_fu_186_ap_return_7;
        buf_temp_qft_2_0_V_reg_568 <= grp_quantificat_fu_186_ap_return_8;
        buf_temp_qft_2_1_V_2_reg_603 <= buf_temp_qft_2_1_V_2_fu_390_p3;
        buf_temp_qft_2_2_V_reg_573 <= grp_quantificat_fu_186_ap_return_10;
        buf_temp_qft_2_3_V_reg_578 <= grp_quantificat_fu_186_ap_return_11;
        buf_temp_qft_3_0_V_2_reg_598 <= buf_temp_qft_3_0_V_2_fu_382_p3;
        buf_temp_qft_3_1_V_reg_583 <= grp_quantificat_fu_186_ap_return_13;
        buf_temp_qft_3_2_V_reg_588 <= grp_quantificat_fu_186_ap_return_14;
        buf_temp_qft_3_3_V_reg_593 <= grp_quantificat_fu_186_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_1_reg_639 <= c_1_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_523 <= c_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_2_reg_621 <= r_2_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_reg_497 <= r_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_125_cast_reg_507[4 : 2] <= tmp_125_cast_fu_229_p1[4 : 2];
        tmp_i_reg_502[3 : 2] <= tmp_i_fu_213_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i1_fu_414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_127_cast_reg_626[4 : 2] <= tmp_127_cast_fu_434_p1[4 : 2];
        tmp_1_i1_reg_631[3 : 2] <= tmp_1_i1_fu_442_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_4_i_reg_649 <= tmp_4_i_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_97_reg_533 <= tmp_97_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_512 <= tmp_fu_233_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond1_i1_fu_414_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i1_fu_414_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_2d_in_address0 = tmp_129_cast_fu_278_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_2d_in_address0 = grp_dct_step_fu_191_src_address0;
    end else begin
        buf_2d_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_2d_in_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_2d_in_ce0 = grp_dct_step_fu_191_src_ce0;
    end else begin
        buf_2d_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_2d_in_ce1 = grp_dct_step_fu_191_src_ce1;
    end else begin
        buf_2d_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_2d_in_we0 = 1'b1;
    end else begin
        buf_2d_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        buf_2d_out_address0 = tmp_130_cast_fu_475_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buf_2d_out_address0 = grp_integer_idct_fu_165_out_r_address0;
    end else begin
        buf_2d_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        buf_2d_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buf_2d_out_ce0 = grp_integer_idct_fu_165_out_r_ce0;
    end else begin
        buf_2d_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buf_2d_out_ce1 = grp_integer_idct_fu_165_out_r_ce1;
    end else begin
        buf_2d_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buf_2d_out_we0 = grp_integer_idct_fu_165_out_r_we0;
    end else begin
        buf_2d_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buf_2d_out_we1 = grp_integer_idct_fu_165_out_r_we1;
    end else begin
        buf_2d_out_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_temp_dct_address0 = grp_dct_step_fu_191_dst_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_temp_dct_address0 = grp_quantificat_fu_186_qsrc_address0;
    end else begin
        buf_temp_dct_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_temp_dct_address1 = grp_dct_step_fu_191_dst_address1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_temp_dct_address1 = grp_quantificat_fu_186_qsrc_address1;
    end else begin
        buf_temp_dct_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_temp_dct_ce0 = grp_dct_step_fu_191_dst_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_temp_dct_ce0 = grp_quantificat_fu_186_qsrc_ce0;
    end else begin
        buf_temp_dct_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_temp_dct_ce1 = grp_dct_step_fu_191_dst_ce1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_temp_dct_ce1 = grp_quantificat_fu_186_qsrc_ce1;
    end else begin
        buf_temp_dct_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_temp_dct_we0 = grp_dct_step_fu_191_dst_we0;
    end else begin
        buf_temp_dct_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_temp_dct_we1 = grp_dct_step_fu_191_dst_we1;
    end else begin
        buf_temp_dct_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_dct_step_fu_191_src_q0 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_dct_step_fu_191_src_q0 = buf_2d_in_q0;
    end else begin
        grp_dct_step_fu_191_src_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_dct_step_fu_191_src_q1 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_dct_step_fu_191_src_q1 = buf_2d_in_q1;
    end else begin
        grp_dct_step_fu_191_src_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indata_ce0 = 1'b1;
    end else begin
        indata_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        outdata_ce0 = 1'b1;
    end else begin
        outdata_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        outdata_we0 = 1'b1;
    end else begin
        outdata_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_address0 = grp_dct_step_fu_191_dst_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_address0 = grp_dct_step_fu_191_src_address0;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_address1 = grp_dct_step_fu_191_dst_address1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_address1 = grp_dct_step_fu_191_src_address1;
    end else begin
        temp_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_ce0 = grp_dct_step_fu_191_dst_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_ce0 = grp_dct_step_fu_191_src_ce0;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_ce1 = grp_dct_step_fu_191_dst_ce1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_ce1 = grp_dct_step_fu_191_src_ce1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_we0 = grp_dct_step_fu_191_dst_we0;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_we1 = grp_dct_step_fu_191_dst_we1;
    end else begin
        temp_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_i_fu_197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_i_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_dct_step_fu_191_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_dct_step_fu_191_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_quantificat_fu_186_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((grp_integer_idct_fu_165_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((exitcond1_i1_fu_414_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((exitcond_i1_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign buf_2d_in_d0 = indata_q0;

assign buf_temp_qft_0_3_V_1_fu_376_p2 = (grp_quantificat_fu_186_ap_return_3 + 20'd10);

assign buf_temp_qft_0_3_V_2_fu_406_p3 = ((tmp_reg_512[0:0] === 1'b1) ? grp_quantificat_fu_186_ap_return_3 : buf_temp_qft_0_3_V_1_fu_376_p2);

assign buf_temp_qft_1_2_V_1_fu_364_p2 = (grp_quantificat_fu_186_ap_return_6 + 20'd10);

assign buf_temp_qft_1_2_V_2_fu_398_p3 = ((tmp_reg_512[0:0] === 1'b1) ? buf_temp_qft_1_2_V_1_fu_364_p2 : grp_quantificat_fu_186_ap_return_6);

assign buf_temp_qft_2_1_V_1_fu_370_p2 = (grp_quantificat_fu_186_ap_return_9 + 20'd10);

assign buf_temp_qft_2_1_V_2_fu_390_p3 = ((tmp_reg_512[0:0] === 1'b1) ? grp_quantificat_fu_186_ap_return_9 : buf_temp_qft_2_1_V_1_fu_370_p2);

assign buf_temp_qft_3_0_V_1_fu_358_p2 = (grp_quantificat_fu_186_ap_return_12 + 20'd10);

assign buf_temp_qft_3_0_V_2_fu_382_p3 = ((tmp_reg_512[0:0] === 1'b1) ? buf_temp_qft_3_0_V_1_fu_358_p2 : grp_quantificat_fu_186_ap_return_12);

assign c_1_fu_460_p2 = (c_i1_reg_154 + 3'd1);

assign c_fu_248_p2 = (c_i_reg_132 + 3'd1);

assign c_i1_cast_fu_450_p1 = c_i1_reg_154;

assign c_i_cast_fu_238_p1 = c_i_reg_132;

assign exitcond1_i1_fu_414_p2 = ((r_i1_reg_143 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond1_i_fu_197_p2 = ((r_i_reg_121 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_454_p2 = ((c_i1_reg_154 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_i_fu_242_p2 = ((c_i_reg_132 == 3'd4) ? 1'b1 : 1'b0);

assign grp_dct_step_fu_191_ap_start = ap_reg_grp_dct_step_fu_191_ap_start;

assign grp_integer_idct_fu_165_ap_start = ap_reg_grp_integer_idct_fu_165_ap_start;

assign grp_quantificat_fu_186_ap_start = ap_reg_grp_quantificat_fu_186_ap_start;

assign indata_address0 = tmp_i_9_fu_259_p1;

assign outdata_address0 = tmp_5_i_fu_485_p1;

assign outdata_d0 = buf_2d_out_q0;

assign r_2_fu_420_p2 = (r_i1_reg_143 + 3'd1);

assign r_fu_203_p2 = (r_i_reg_121 + 3'd1);

assign tmp_115_fu_209_p1 = r_i_reg_121[1:0];

assign tmp_116_fu_438_p1 = r_i1_reg_143[1:0];

assign tmp_125_cast_fu_229_p1 = tmp_s_fu_221_p3;

assign tmp_127_cast_fu_434_p1 = tmp_96_fu_426_p3;

assign tmp_129_cast_fu_278_p1 = tmp_97_reg_533;

assign tmp_130_cast_fu_475_p1 = tmp_98_fu_470_p2;

assign tmp_1_i1_fu_442_p3 = {{tmp_116_fu_438_p1}, {2'd0}};

assign tmp_2_i_cast_fu_264_p1 = c_i_reg_132;

assign tmp_3_i1_cast_fu_466_p1 = c_i1_reg_154;

assign tmp_4_i_fu_480_p2 = (c_i1_cast_fu_450_p1 + tmp_1_i1_reg_631);

assign tmp_5_i_fu_485_p1 = tmp_4_i_reg_649;

assign tmp_96_fu_426_p3 = {{r_i1_reg_143}, {2'd0}};

assign tmp_97_fu_268_p2 = (tmp_125_cast_reg_507 + tmp_2_i_cast_fu_264_p1);

assign tmp_98_fu_470_p2 = (tmp_127_cast_reg_626 + tmp_3_i1_cast_fu_466_p1);

assign tmp_9_i_fu_254_p2 = (c_i_cast_fu_238_p1 + tmp_i_reg_502);

assign tmp_fu_233_p2 = ((mark == 8'd0) ? 1'b1 : 1'b0);

assign tmp_i_9_fu_259_p1 = tmp_9_i_fu_254_p2;

assign tmp_i_fu_213_p3 = {{tmp_115_fu_209_p1}, {2'd0}};

assign tmp_s_fu_221_p3 = {{r_i_reg_121}, {2'd0}};

always @ (posedge ap_clk) begin
    tmp_i_reg_502[1:0] <= 2'b00;
    tmp_125_cast_reg_507[1:0] <= 2'b00;
    tmp_125_cast_reg_507[5] <= 1'b0;
    tmp_127_cast_reg_626[1:0] <= 2'b00;
    tmp_127_cast_reg_626[5] <= 1'b0;
    tmp_1_i1_reg_631[1:0] <= 2'b00;
end

endmodule //add_watermark
